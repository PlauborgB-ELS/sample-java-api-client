/*
 * Pure API
 * This is an early access version of the new Pure write API.
 *
 * The version of the OpenAPI document: 0.1 Early Access
 * Contact: b.plauborg@elsevier.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elsevier.pure.api.sample.stubs.model;

import java.util.Objects;
import java.util.Arrays;
import com.elsevier.pure.api.sample.stubs.model.AcademicQualification;
import com.elsevier.pure.api.sample.stubs.model.Address;
import com.elsevier.pure.api.sample.stubs.model.ClassificationRef;
import com.elsevier.pure.api.sample.stubs.model.ClassifiedFile;
import com.elsevier.pure.api.sample.stubs.model.ClassifiedLocalizedValue;
import com.elsevier.pure.api.sample.stubs.model.ClassifiedName;
import com.elsevier.pure.api.sample.stubs.model.ExternalAppointment;
import com.elsevier.pure.api.sample.stubs.model.HonoraryStaffOrganizationAssociation;
import com.elsevier.pure.api.sample.stubs.model.Identifier;
import com.elsevier.pure.api.sample.stubs.model.KeywordGroup;
import com.elsevier.pure.api.sample.stubs.model.Link;
import com.elsevier.pure.api.sample.stubs.model.Name;
import com.elsevier.pure.api.sample.stubs.model.PersonClassifiedLeaveOfAbsence;
import com.elsevier.pure.api.sample.stubs.model.ProfessionalQualification;
import com.elsevier.pure.api.sample.stubs.model.StaffOrganizationAssociation;
import com.elsevier.pure.api.sample.stubs.model.StudentOrganizationAssociation;
import com.elsevier.pure.api.sample.stubs.model.UserRef;
import com.elsevier.pure.api.sample.stubs.model.Visibility;
import com.elsevier.pure.api.sample.stubs.model.VisitingScholarOrganizationAssociation;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * An academic professional, student, or other individual attatched to the institution.
 */
@ApiModel(description = "An academic professional, student, or other individual attatched to the institution.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-21T09:12:55.713+02:00[Europe/Copenhagen]")
public class Person {
  public static final String SERIALIZED_NAME_PURE_ID = "pureId";
  @SerializedName(SERIALIZED_NAME_PURE_ID)
  private Long pureId;

  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private UUID uuid;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private String createdBy;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private OffsetDateTime createdDate;

  public static final String SERIALIZED_NAME_MODIFIED_BY = "modifiedBy";
  @SerializedName(SERIALIZED_NAME_MODIFIED_BY)
  private String modifiedBy;

  public static final String SERIALIZED_NAME_MODIFIED_DATE = "modifiedDate";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE)
  private OffsetDateTime modifiedDate;

  public static final String SERIALIZED_NAME_PORTAL_URL = "portalUrl";
  @SerializedName(SERIALIZED_NAME_PORTAL_URL)
  private String portalUrl;

  public static final String SERIALIZED_NAME_PRETTY_URL_IDENTIFIERS = "prettyUrlIdentifiers";
  @SerializedName(SERIALIZED_NAME_PRETTY_URL_IDENTIFIERS)
  private List<String> prettyUrlIdentifiers = null;

  public static final String SERIALIZED_NAME_PREVIOUS_UUIDS = "previousUuids";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_UUIDS)
  private List<String> previousUuids = null;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_START_DATE_AS_RESEARCHER = "startDateAsResearcher";
  @SerializedName(SERIALIZED_NAME_START_DATE_AS_RESEARCHER)
  private OffsetDateTime startDateAsResearcher;

  public static final String SERIALIZED_NAME_AFFILIATION_NOTE = "affiliationNote";
  @SerializedName(SERIALIZED_NAME_AFFILIATION_NOTE)
  private String affiliationNote;

  public static final String SERIALIZED_NAME_DATE_OF_BIRTH = "dateOfBirth";
  @SerializedName(SERIALIZED_NAME_DATE_OF_BIRTH)
  private OffsetDateTime dateOfBirth;

  public static final String SERIALIZED_NAME_EMPLOYEE_START_DATE = "employeeStartDate";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_START_DATE)
  private OffsetDateTime employeeStartDate;

  public static final String SERIALIZED_NAME_EXTERNAL_POSITIONS = "externalPositions";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_POSITIONS)
  private List<ExternalAppointment> externalPositions = null;

  public static final String SERIALIZED_NAME_KEYWORD_GROUPS = "keywordGroups";
  @SerializedName(SERIALIZED_NAME_KEYWORD_GROUPS)
  private List<KeywordGroup> keywordGroups = null;

  public static final String SERIALIZED_NAME_LEAVES_OF_ABSENCE = "leavesOfAbsence";
  @SerializedName(SERIALIZED_NAME_LEAVES_OF_ABSENCE)
  private List<PersonClassifiedLeaveOfAbsence> leavesOfAbsence = null;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private List<Link> links = null;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private Name name;

  public static final String SERIALIZED_NAME_NAMES = "names";
  @SerializedName(SERIALIZED_NAME_NAMES)
  private List<ClassifiedName> names = null;

  public static final String SERIALIZED_NAME_NATIONALITY = "nationality";
  @SerializedName(SERIALIZED_NAME_NATIONALITY)
  private ClassificationRef nationality;

  public static final String SERIALIZED_NAME_ORCID = "orcid";
  @SerializedName(SERIALIZED_NAME_ORCID)
  private String orcid;

  public static final String SERIALIZED_NAME_HONORARY_STAFF_ORGANIZATION_ASSOCIATIONS = "honoraryStaffOrganizationAssociations";
  @SerializedName(SERIALIZED_NAME_HONORARY_STAFF_ORGANIZATION_ASSOCIATIONS)
  private List<HonoraryStaffOrganizationAssociation> honoraryStaffOrganizationAssociations = null;

  public static final String SERIALIZED_NAME_STAFF_ORGANIZATION_ASSOCIATIONS = "staffOrganizationAssociations";
  @SerializedName(SERIALIZED_NAME_STAFF_ORGANIZATION_ASSOCIATIONS)
  private List<StaffOrganizationAssociation> staffOrganizationAssociations = null;

  public static final String SERIALIZED_NAME_STUDENT_ORGANIZATION_ASSOCIATIONS = "studentOrganizationAssociations";
  @SerializedName(SERIALIZED_NAME_STUDENT_ORGANIZATION_ASSOCIATIONS)
  private List<StudentOrganizationAssociation> studentOrganizationAssociations = null;

  public static final String SERIALIZED_NAME_VISITING_SCHOLAR_ORGANIZATION_ASSOCIATIONS = "visitingScholarOrganizationAssociations";
  @SerializedName(SERIALIZED_NAME_VISITING_SCHOLAR_ORGANIZATION_ASSOCIATIONS)
  private List<VisitingScholarOrganizationAssociation> visitingScholarOrganizationAssociations = null;

  public static final String SERIALIZED_NAME_ACADEMIC_QUALIFICATIONS = "academicQualifications";
  @SerializedName(SERIALIZED_NAME_ACADEMIC_QUALIFICATIONS)
  private List<AcademicQualification> academicQualifications = null;

  public static final String SERIALIZED_NAME_PROFILE_PHOTOS = "profilePhotos";
  @SerializedName(SERIALIZED_NAME_PROFILE_PHOTOS)
  private List<ClassifiedFile> profilePhotos = null;

  public static final String SERIALIZED_NAME_PRIVATE_ADDRESS = "privateAddress";
  @SerializedName(SERIALIZED_NAME_PRIVATE_ADDRESS)
  private Address privateAddress;

  public static final String SERIALIZED_NAME_PROFESSIONAL_QUALIFICATIONS = "professionalQualifications";
  @SerializedName(SERIALIZED_NAME_PROFESSIONAL_QUALIFICATIONS)
  private List<ProfessionalQualification> professionalQualifications = null;

  public static final String SERIALIZED_NAME_SELECTED_FOR_PROFILE_REFINEMENT_SERVICE = "selectedForProfileRefinementService";
  @SerializedName(SERIALIZED_NAME_SELECTED_FOR_PROFILE_REFINEMENT_SERVICE)
  private Boolean selectedForProfileRefinementService;

  public static final String SERIALIZED_NAME_PROFILE_INFORMATION = "profileInformation";
  @SerializedName(SERIALIZED_NAME_PROFILE_INFORMATION)
  private List<ClassifiedLocalizedValue> profileInformation = null;

  public static final String SERIALIZED_NAME_RETIREMENT_DATE = "retirementDate";
  @SerializedName(SERIALIZED_NAME_RETIREMENT_DATE)
  private OffsetDateTime retirementDate;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private ClassificationRef gender;

  public static final String SERIALIZED_NAME_TITLES = "titles";
  @SerializedName(SERIALIZED_NAME_TITLES)
  private List<ClassifiedLocalizedValue> titles = null;

  public static final String SERIALIZED_NAME_VISIBILITY = "visibility";
  @SerializedName(SERIALIZED_NAME_VISIBILITY)
  private Visibility visibility;

  public static final String SERIALIZED_NAME_WILLING_TO_TAKE_PHD_STUDENTS = "willingToTakePhdStudents";
  @SerializedName(SERIALIZED_NAME_WILLING_TO_TAKE_PHD_STUDENTS)
  private Boolean willingToTakePhdStudents;

  public static final String SERIALIZED_NAME_WILLING_TO_TAKE_PHD_STUDENTS_DESCRIPTION = "willingToTakePhdStudentsDescription";
  @SerializedName(SERIALIZED_NAME_WILLING_TO_TAKE_PHD_STUDENTS_DESCRIPTION)
  private String willingToTakePhdStudentsDescription;

  public static final String SERIALIZED_NAME_IDENTIFIERS = "identifiers";
  @SerializedName(SERIALIZED_NAME_IDENTIFIERS)
  private List<Identifier> identifiers = null;

  public static final String SERIALIZED_NAME_USER = "user";
  @SerializedName(SERIALIZED_NAME_USER)
  private UserRef user;

  public static final String SERIALIZED_NAME_SYSTEM_NAME = "systemName";
  @SerializedName(SERIALIZED_NAME_SYSTEM_NAME)
  private String systemName;


   /**
   * Pure database ID of the object, prefer using the UUID if it is present on the entity
   * @return pureId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pure database ID of the object, prefer using the UUID if it is present on the entity")

  public Long getPureId() {
    return pureId;
  }




   /**
   * UUID, this is the primary identity of the entity
   * @return uuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UUID, this is the primary identity of the entity")

  public UUID getUuid() {
    return uuid;
  }




   /**
   * Username of creator
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Username of creator")

  public String getCreatedBy() {
    return createdBy;
  }




   /**
   * Date and time of creation
   * @return createdDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date and time of creation")

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }




   /**
   * Username of the user that performed a modification
   * @return modifiedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Username of the user that performed a modification")

  public String getModifiedBy() {
    return modifiedBy;
  }




   /**
   * Date and time of last modification
   * @return modifiedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date and time of last modification")

  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }




   /**
   * URL of the content on the Pure Portal
   * @return portalUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URL of the content on the Pure Portal")

  public String getPortalUrl() {
    return portalUrl;
  }




   /**
   * All pretty URLs
   * @return prettyUrlIdentifiers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "All pretty URLs")

  public List<String> getPrettyUrlIdentifiers() {
    return prettyUrlIdentifiers;
  }




   /**
   * UUIDs of other content items which have been merged into this content item (or similar)
   * @return previousUuids
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UUIDs of other content items which have been merged into this content item (or similar)")

  public List<String> getPreviousUuids() {
    return previousUuids;
  }




  public Person version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * A hash representing the current version of the content. For new content this is null, and for existing content the current value. The property should never be modified explicitly by a client.
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A hash representing the current version of the content. For new content this is null, and for existing content the current value. The property should never be modified explicitly by a client.")

  public String getVersion() {
    return version;
  }


  public void setVersion(String version) {
    this.version = version;
  }


  public Person startDateAsResearcher(OffsetDateTime startDateAsResearcher) {
    
    this.startDateAsResearcher = startDateAsResearcher;
    return this;
  }

   /**
   * Date that the person entered into the academic profession.
   * @return startDateAsResearcher
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date that the person entered into the academic profession.")

  public OffsetDateTime getStartDateAsResearcher() {
    return startDateAsResearcher;
  }


  public void setStartDateAsResearcher(OffsetDateTime startDateAsResearcher) {
    this.startDateAsResearcher = startDateAsResearcher;
  }


  public Person affiliationNote(String affiliationNote) {
    
    this.affiliationNote = affiliationNote;
    return this;
  }

   /**
   * Notes regarding affiliations of the person.
   * @return affiliationNote
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Notes regarding affiliations of the person.")

  public String getAffiliationNote() {
    return affiliationNote;
  }


  public void setAffiliationNote(String affiliationNote) {
    this.affiliationNote = affiliationNote;
  }


  public Person dateOfBirth(OffsetDateTime dateOfBirth) {
    
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * The person&#39;s date of birth.
   * @return dateOfBirth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The person's date of birth.")

  public OffsetDateTime getDateOfBirth() {
    return dateOfBirth;
  }


  public void setDateOfBirth(OffsetDateTime dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }


  public Person employeeStartDate(OffsetDateTime employeeStartDate) {
    
    this.employeeStartDate = employeeStartDate;
    return this;
  }

   /**
   * Date of the persons first day of the institution.
   * @return employeeStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date of the persons first day of the institution.")

  public OffsetDateTime getEmployeeStartDate() {
    return employeeStartDate;
  }


  public void setEmployeeStartDate(OffsetDateTime employeeStartDate) {
    this.employeeStartDate = employeeStartDate;
  }


  public Person externalPositions(List<ExternalAppointment> externalPositions) {
    
    this.externalPositions = externalPositions;
    return this;
  }

  public Person addExternalPositionsItem(ExternalAppointment externalPositionsItem) {
    if (this.externalPositions == null) {
      this.externalPositions = new ArrayList<ExternalAppointment>();
    }
    this.externalPositions.add(externalPositionsItem);
    return this;
  }

   /**
   * positions held by the person, that are external to the institution
   * @return externalPositions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "positions held by the person, that are external to the institution")

  public List<ExternalAppointment> getExternalPositions() {
    return externalPositions;
  }


  public void setExternalPositions(List<ExternalAppointment> externalPositions) {
    this.externalPositions = externalPositions;
  }


  public Person keywordGroups(List<KeywordGroup> keywordGroups) {
    
    this.keywordGroups = keywordGroups;
    return this;
  }

  public Person addKeywordGroupsItem(KeywordGroup keywordGroupsItem) {
    if (this.keywordGroups == null) {
      this.keywordGroups = new ArrayList<KeywordGroup>();
    }
    this.keywordGroups.add(keywordGroupsItem);
    return this;
  }

   /**
   * Groups of Keyword associated with the person.
   * @return keywordGroups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Groups of Keyword associated with the person.")

  public List<KeywordGroup> getKeywordGroups() {
    return keywordGroups;
  }


  public void setKeywordGroups(List<KeywordGroup> keywordGroups) {
    this.keywordGroups = keywordGroups;
  }


  public Person leavesOfAbsence(List<PersonClassifiedLeaveOfAbsence> leavesOfAbsence) {
    
    this.leavesOfAbsence = leavesOfAbsence;
    return this;
  }

  public Person addLeavesOfAbsenceItem(PersonClassifiedLeaveOfAbsence leavesOfAbsenceItem) {
    if (this.leavesOfAbsence == null) {
      this.leavesOfAbsence = new ArrayList<PersonClassifiedLeaveOfAbsence>();
    }
    this.leavesOfAbsence.add(leavesOfAbsenceItem);
    return this;
  }

   /**
   * Leaves of absence had by the person.
   * @return leavesOfAbsence
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Leaves of absence had by the person.")

  public List<PersonClassifiedLeaveOfAbsence> getLeavesOfAbsence() {
    return leavesOfAbsence;
  }


  public void setLeavesOfAbsence(List<PersonClassifiedLeaveOfAbsence> leavesOfAbsence) {
    this.leavesOfAbsence = leavesOfAbsence;
  }


  public Person links(List<Link> links) {
    
    this.links = links;
    return this;
  }

  public Person addLinksItem(Link linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<Link>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Links associated with the person.
   * @return links
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Links associated with the person.")

  public List<Link> getLinks() {
    return links;
  }


  public void setLinks(List<Link> links) {
    this.links = links;
  }


  public Person name(Name name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Name getName() {
    return name;
  }


  public void setName(Name name) {
    this.name = name;
  }


  public Person names(List<ClassifiedName> names) {
    
    this.names = names;
    return this;
  }

  public Person addNamesItem(ClassifiedName namesItem) {
    if (this.names == null) {
      this.names = new ArrayList<ClassifiedName>();
    }
    this.names.add(namesItem);
    return this;
  }

   /**
   * Variant names of the person, Known aliases, ect.
   * @return names
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Variant names of the person, Known aliases, ect.")

  public List<ClassifiedName> getNames() {
    return names;
  }


  public void setNames(List<ClassifiedName> names) {
    this.names = names;
  }


  public Person nationality(ClassificationRef nationality) {
    
    this.nationality = nationality;
    return this;
  }

   /**
   * Get nationality
   * @return nationality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ClassificationRef getNationality() {
    return nationality;
  }


  public void setNationality(ClassificationRef nationality) {
    this.nationality = nationality;
  }


  public Person orcid(String orcid) {
    
    this.orcid = orcid;
    return this;
  }

   /**
   * orcid of the person .
   * @return orcid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "orcid of the person .")

  public String getOrcid() {
    return orcid;
  }


  public void setOrcid(String orcid) {
    this.orcid = orcid;
  }


  public Person honoraryStaffOrganizationAssociations(List<HonoraryStaffOrganizationAssociation> honoraryStaffOrganizationAssociations) {
    
    this.honoraryStaffOrganizationAssociations = honoraryStaffOrganizationAssociations;
    return this;
  }

  public Person addHonoraryStaffOrganizationAssociationsItem(HonoraryStaffOrganizationAssociation honoraryStaffOrganizationAssociationsItem) {
    if (this.honoraryStaffOrganizationAssociations == null) {
      this.honoraryStaffOrganizationAssociations = new ArrayList<HonoraryStaffOrganizationAssociation>();
    }
    this.honoraryStaffOrganizationAssociations.add(honoraryStaffOrganizationAssociationsItem);
    return this;
  }

   /**
   * Organisations that the person is associated with under the title of &#39;Honorary Staff&#39;
   * @return honoraryStaffOrganizationAssociations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Organisations that the person is associated with under the title of 'Honorary Staff'")

  public List<HonoraryStaffOrganizationAssociation> getHonoraryStaffOrganizationAssociations() {
    return honoraryStaffOrganizationAssociations;
  }


  public void setHonoraryStaffOrganizationAssociations(List<HonoraryStaffOrganizationAssociation> honoraryStaffOrganizationAssociations) {
    this.honoraryStaffOrganizationAssociations = honoraryStaffOrganizationAssociations;
  }


  public Person staffOrganizationAssociations(List<StaffOrganizationAssociation> staffOrganizationAssociations) {
    
    this.staffOrganizationAssociations = staffOrganizationAssociations;
    return this;
  }

  public Person addStaffOrganizationAssociationsItem(StaffOrganizationAssociation staffOrganizationAssociationsItem) {
    if (this.staffOrganizationAssociations == null) {
      this.staffOrganizationAssociations = new ArrayList<StaffOrganizationAssociation>();
    }
    this.staffOrganizationAssociations.add(staffOrganizationAssociationsItem);
    return this;
  }

   /**
   * Organizations that the person is associated with as &#39;Staff&#39;
   * @return staffOrganizationAssociations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Organizations that the person is associated with as 'Staff'")

  public List<StaffOrganizationAssociation> getStaffOrganizationAssociations() {
    return staffOrganizationAssociations;
  }


  public void setStaffOrganizationAssociations(List<StaffOrganizationAssociation> staffOrganizationAssociations) {
    this.staffOrganizationAssociations = staffOrganizationAssociations;
  }


  public Person studentOrganizationAssociations(List<StudentOrganizationAssociation> studentOrganizationAssociations) {
    
    this.studentOrganizationAssociations = studentOrganizationAssociations;
    return this;
  }

  public Person addStudentOrganizationAssociationsItem(StudentOrganizationAssociation studentOrganizationAssociationsItem) {
    if (this.studentOrganizationAssociations == null) {
      this.studentOrganizationAssociations = new ArrayList<StudentOrganizationAssociation>();
    }
    this.studentOrganizationAssociations.add(studentOrganizationAssociationsItem);
    return this;
  }

   /**
   * Organizations that the person is associated with as a &#39;Student&#39;
   * @return studentOrganizationAssociations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Organizations that the person is associated with as a 'Student'")

  public List<StudentOrganizationAssociation> getStudentOrganizationAssociations() {
    return studentOrganizationAssociations;
  }


  public void setStudentOrganizationAssociations(List<StudentOrganizationAssociation> studentOrganizationAssociations) {
    this.studentOrganizationAssociations = studentOrganizationAssociations;
  }


  public Person visitingScholarOrganizationAssociations(List<VisitingScholarOrganizationAssociation> visitingScholarOrganizationAssociations) {
    
    this.visitingScholarOrganizationAssociations = visitingScholarOrganizationAssociations;
    return this;
  }

  public Person addVisitingScholarOrganizationAssociationsItem(VisitingScholarOrganizationAssociation visitingScholarOrganizationAssociationsItem) {
    if (this.visitingScholarOrganizationAssociations == null) {
      this.visitingScholarOrganizationAssociations = new ArrayList<VisitingScholarOrganizationAssociation>();
    }
    this.visitingScholarOrganizationAssociations.add(visitingScholarOrganizationAssociationsItem);
    return this;
  }

   /**
   * Organizations that the person is associated with as a &#39;Visiting Scholar
   * @return visitingScholarOrganizationAssociations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Organizations that the person is associated with as a 'Visiting Scholar")

  public List<VisitingScholarOrganizationAssociation> getVisitingScholarOrganizationAssociations() {
    return visitingScholarOrganizationAssociations;
  }


  public void setVisitingScholarOrganizationAssociations(List<VisitingScholarOrganizationAssociation> visitingScholarOrganizationAssociations) {
    this.visitingScholarOrganizationAssociations = visitingScholarOrganizationAssociations;
  }


  public Person academicQualifications(List<AcademicQualification> academicQualifications) {
    
    this.academicQualifications = academicQualifications;
    return this;
  }

  public Person addAcademicQualificationsItem(AcademicQualification academicQualificationsItem) {
    if (this.academicQualifications == null) {
      this.academicQualifications = new ArrayList<AcademicQualification>();
    }
    this.academicQualifications.add(academicQualificationsItem);
    return this;
  }

   /**
   * Levels of academic qualifications that the person has achieved.
   * @return academicQualifications
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Levels of academic qualifications that the person has achieved.")

  public List<AcademicQualification> getAcademicQualifications() {
    return academicQualifications;
  }


  public void setAcademicQualifications(List<AcademicQualification> academicQualifications) {
    this.academicQualifications = academicQualifications;
  }


  public Person profilePhotos(List<ClassifiedFile> profilePhotos) {
    
    this.profilePhotos = profilePhotos;
    return this;
  }

  public Person addProfilePhotosItem(ClassifiedFile profilePhotosItem) {
    if (this.profilePhotos == null) {
      this.profilePhotos = new ArrayList<ClassifiedFile>();
    }
    this.profilePhotos.add(profilePhotosItem);
    return this;
  }

   /**
   * Profile photos in the form of Image files. The maximum file size is 1mb
   * @return profilePhotos
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Profile photos in the form of Image files. The maximum file size is 1mb")

  public List<ClassifiedFile> getProfilePhotos() {
    return profilePhotos;
  }


  public void setProfilePhotos(List<ClassifiedFile> profilePhotos) {
    this.profilePhotos = profilePhotos;
  }


  public Person privateAddress(Address privateAddress) {
    
    this.privateAddress = privateAddress;
    return this;
  }

   /**
   * Get privateAddress
   * @return privateAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Address getPrivateAddress() {
    return privateAddress;
  }


  public void setPrivateAddress(Address privateAddress) {
    this.privateAddress = privateAddress;
  }


  public Person professionalQualifications(List<ProfessionalQualification> professionalQualifications) {
    
    this.professionalQualifications = professionalQualifications;
    return this;
  }

  public Person addProfessionalQualificationsItem(ProfessionalQualification professionalQualificationsItem) {
    if (this.professionalQualifications == null) {
      this.professionalQualifications = new ArrayList<ProfessionalQualification>();
    }
    this.professionalQualifications.add(professionalQualificationsItem);
    return this;
  }

   /**
   * The professional qualifications held by the person
   * @return professionalQualifications
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The professional qualifications held by the person")

  public List<ProfessionalQualification> getProfessionalQualifications() {
    return professionalQualifications;
  }


  public void setProfessionalQualifications(List<ProfessionalQualification> professionalQualifications) {
    this.professionalQualifications = professionalQualifications;
  }


  public Person selectedForProfileRefinementService(Boolean selectedForProfileRefinementService) {
    
    this.selectedForProfileRefinementService = selectedForProfileRefinementService;
    return this;
  }

   /**
   * If the person has been profiled.
   * @return selectedForProfileRefinementService
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If the person has been profiled.")

  public Boolean getSelectedForProfileRefinementService() {
    return selectedForProfileRefinementService;
  }


  public void setSelectedForProfileRefinementService(Boolean selectedForProfileRefinementService) {
    this.selectedForProfileRefinementService = selectedForProfileRefinementService;
  }


  public Person profileInformation(List<ClassifiedLocalizedValue> profileInformation) {
    
    this.profileInformation = profileInformation;
    return this;
  }

  public Person addProfileInformationItem(ClassifiedLocalizedValue profileInformationItem) {
    if (this.profileInformation == null) {
      this.profileInformation = new ArrayList<ClassifiedLocalizedValue>();
    }
    this.profileInformation.add(profileInformationItem);
    return this;
  }

   /**
   * Information objects making up profiles made of the person
   * @return profileInformation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Information objects making up profiles made of the person")

  public List<ClassifiedLocalizedValue> getProfileInformation() {
    return profileInformation;
  }


  public void setProfileInformation(List<ClassifiedLocalizedValue> profileInformation) {
    this.profileInformation = profileInformation;
  }


  public Person retirementDate(OffsetDateTime retirementDate) {
    
    this.retirementDate = retirementDate;
    return this;
  }

   /**
   * Date of retirement for the person
   * @return retirementDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date of retirement for the person")

  public OffsetDateTime getRetirementDate() {
    return retirementDate;
  }


  public void setRetirementDate(OffsetDateTime retirementDate) {
    this.retirementDate = retirementDate;
  }


  public Person gender(ClassificationRef gender) {
    
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ClassificationRef getGender() {
    return gender;
  }


  public void setGender(ClassificationRef gender) {
    this.gender = gender;
  }


  public Person titles(List<ClassifiedLocalizedValue> titles) {
    
    this.titles = titles;
    return this;
  }

  public Person addTitlesItem(ClassifiedLocalizedValue titlesItem) {
    if (this.titles == null) {
      this.titles = new ArrayList<ClassifiedLocalizedValue>();
    }
    this.titles.add(titlesItem);
    return this;
  }

   /**
   * Titles held by the person
   * @return titles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Titles held by the person")

  public List<ClassifiedLocalizedValue> getTitles() {
    return titles;
  }


  public void setTitles(List<ClassifiedLocalizedValue> titles) {
    this.titles = titles;
  }


  public Person visibility(Visibility visibility) {
    
    this.visibility = visibility;
    return this;
  }

   /**
   * Get visibility
   * @return visibility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Visibility getVisibility() {
    return visibility;
  }


  public void setVisibility(Visibility visibility) {
    this.visibility = visibility;
  }


  public Person willingToTakePhdStudents(Boolean willingToTakePhdStudents) {
    
    this.willingToTakePhdStudents = willingToTakePhdStudents;
    return this;
  }

   /**
   * Boolean to define if the Person is willing to take on Phd Students.
   * @return willingToTakePhdStudents
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Boolean to define if the Person is willing to take on Phd Students.")

  public Boolean getWillingToTakePhdStudents() {
    return willingToTakePhdStudents;
  }


  public void setWillingToTakePhdStudents(Boolean willingToTakePhdStudents) {
    this.willingToTakePhdStudents = willingToTakePhdStudents;
  }


  public Person willingToTakePhdStudentsDescription(String willingToTakePhdStudentsDescription) {
    
    this.willingToTakePhdStudentsDescription = willingToTakePhdStudentsDescription;
    return this;
  }

   /**
   * Field to describe or list phd projects that the person will participate in.
   * @return willingToTakePhdStudentsDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Field to describe or list phd projects that the person will participate in.")

  public String getWillingToTakePhdStudentsDescription() {
    return willingToTakePhdStudentsDescription;
  }


  public void setWillingToTakePhdStudentsDescription(String willingToTakePhdStudentsDescription) {
    this.willingToTakePhdStudentsDescription = willingToTakePhdStudentsDescription;
  }


  public Person identifiers(List<Identifier> identifiers) {
    
    this.identifiers = identifiers;
    return this;
  }

  public Person addIdentifiersItem(Identifier identifiersItem) {
    if (this.identifiers == null) {
      this.identifiers = new ArrayList<Identifier>();
    }
    this.identifiers.add(identifiersItem);
    return this;
  }

   /**
   * Identifiers related to the person
   * @return identifiers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifiers related to the person")

  public List<Identifier> getIdentifiers() {
    return identifiers;
  }


  public void setIdentifiers(List<Identifier> identifiers) {
    this.identifiers = identifiers;
  }


  public Person user(UserRef user) {
    
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserRef getUser() {
    return user;
  }


  public void setUser(UserRef user) {
    this.user = user;
  }


   /**
   * The content system name
   * @return systemName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The content system name")

  public String getSystemName() {
    return systemName;
  }




  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Person person = (Person) o;
    return Objects.equals(this.pureId, person.pureId) &&
        Objects.equals(this.uuid, person.uuid) &&
        Objects.equals(this.createdBy, person.createdBy) &&
        Objects.equals(this.createdDate, person.createdDate) &&
        Objects.equals(this.modifiedBy, person.modifiedBy) &&
        Objects.equals(this.modifiedDate, person.modifiedDate) &&
        Objects.equals(this.portalUrl, person.portalUrl) &&
        Objects.equals(this.prettyUrlIdentifiers, person.prettyUrlIdentifiers) &&
        Objects.equals(this.previousUuids, person.previousUuids) &&
        Objects.equals(this.version, person.version) &&
        Objects.equals(this.startDateAsResearcher, person.startDateAsResearcher) &&
        Objects.equals(this.affiliationNote, person.affiliationNote) &&
        Objects.equals(this.dateOfBirth, person.dateOfBirth) &&
        Objects.equals(this.employeeStartDate, person.employeeStartDate) &&
        Objects.equals(this.externalPositions, person.externalPositions) &&
        Objects.equals(this.keywordGroups, person.keywordGroups) &&
        Objects.equals(this.leavesOfAbsence, person.leavesOfAbsence) &&
        Objects.equals(this.links, person.links) &&
        Objects.equals(this.name, person.name) &&
        Objects.equals(this.names, person.names) &&
        Objects.equals(this.nationality, person.nationality) &&
        Objects.equals(this.orcid, person.orcid) &&
        Objects.equals(this.honoraryStaffOrganizationAssociations, person.honoraryStaffOrganizationAssociations) &&
        Objects.equals(this.staffOrganizationAssociations, person.staffOrganizationAssociations) &&
        Objects.equals(this.studentOrganizationAssociations, person.studentOrganizationAssociations) &&
        Objects.equals(this.visitingScholarOrganizationAssociations, person.visitingScholarOrganizationAssociations) &&
        Objects.equals(this.academicQualifications, person.academicQualifications) &&
        Objects.equals(this.profilePhotos, person.profilePhotos) &&
        Objects.equals(this.privateAddress, person.privateAddress) &&
        Objects.equals(this.professionalQualifications, person.professionalQualifications) &&
        Objects.equals(this.selectedForProfileRefinementService, person.selectedForProfileRefinementService) &&
        Objects.equals(this.profileInformation, person.profileInformation) &&
        Objects.equals(this.retirementDate, person.retirementDate) &&
        Objects.equals(this.gender, person.gender) &&
        Objects.equals(this.titles, person.titles) &&
        Objects.equals(this.visibility, person.visibility) &&
        Objects.equals(this.willingToTakePhdStudents, person.willingToTakePhdStudents) &&
        Objects.equals(this.willingToTakePhdStudentsDescription, person.willingToTakePhdStudentsDescription) &&
        Objects.equals(this.identifiers, person.identifiers) &&
        Objects.equals(this.user, person.user) &&
        Objects.equals(this.systemName, person.systemName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pureId, uuid, createdBy, createdDate, modifiedBy, modifiedDate, portalUrl, prettyUrlIdentifiers, previousUuids, version, startDateAsResearcher, affiliationNote, dateOfBirth, employeeStartDate, externalPositions, keywordGroups, leavesOfAbsence, links, name, names, nationality, orcid, honoraryStaffOrganizationAssociations, staffOrganizationAssociations, studentOrganizationAssociations, visitingScholarOrganizationAssociations, academicQualifications, profilePhotos, privateAddress, professionalQualifications, selectedForProfileRefinementService, profileInformation, retirementDate, gender, titles, visibility, willingToTakePhdStudents, willingToTakePhdStudentsDescription, identifiers, user, systemName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Person {\n");
    sb.append("    pureId: ").append(toIndentedString(pureId)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    portalUrl: ").append(toIndentedString(portalUrl)).append("\n");
    sb.append("    prettyUrlIdentifiers: ").append(toIndentedString(prettyUrlIdentifiers)).append("\n");
    sb.append("    previousUuids: ").append(toIndentedString(previousUuids)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    startDateAsResearcher: ").append(toIndentedString(startDateAsResearcher)).append("\n");
    sb.append("    affiliationNote: ").append(toIndentedString(affiliationNote)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    employeeStartDate: ").append(toIndentedString(employeeStartDate)).append("\n");
    sb.append("    externalPositions: ").append(toIndentedString(externalPositions)).append("\n");
    sb.append("    keywordGroups: ").append(toIndentedString(keywordGroups)).append("\n");
    sb.append("    leavesOfAbsence: ").append(toIndentedString(leavesOfAbsence)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    names: ").append(toIndentedString(names)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("    orcid: ").append(toIndentedString(orcid)).append("\n");
    sb.append("    honoraryStaffOrganizationAssociations: ").append(toIndentedString(honoraryStaffOrganizationAssociations)).append("\n");
    sb.append("    staffOrganizationAssociations: ").append(toIndentedString(staffOrganizationAssociations)).append("\n");
    sb.append("    studentOrganizationAssociations: ").append(toIndentedString(studentOrganizationAssociations)).append("\n");
    sb.append("    visitingScholarOrganizationAssociations: ").append(toIndentedString(visitingScholarOrganizationAssociations)).append("\n");
    sb.append("    academicQualifications: ").append(toIndentedString(academicQualifications)).append("\n");
    sb.append("    profilePhotos: ").append(toIndentedString(profilePhotos)).append("\n");
    sb.append("    privateAddress: ").append(toIndentedString(privateAddress)).append("\n");
    sb.append("    professionalQualifications: ").append(toIndentedString(professionalQualifications)).append("\n");
    sb.append("    selectedForProfileRefinementService: ").append(toIndentedString(selectedForProfileRefinementService)).append("\n");
    sb.append("    profileInformation: ").append(toIndentedString(profileInformation)).append("\n");
    sb.append("    retirementDate: ").append(toIndentedString(retirementDate)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    titles: ").append(toIndentedString(titles)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    willingToTakePhdStudents: ").append(toIndentedString(willingToTakePhdStudents)).append("\n");
    sb.append("    willingToTakePhdStudentsDescription: ").append(toIndentedString(willingToTakePhdStudentsDescription)).append("\n");
    sb.append("    identifiers: ").append(toIndentedString(identifiers)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    systemName: ").append(toIndentedString(systemName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

