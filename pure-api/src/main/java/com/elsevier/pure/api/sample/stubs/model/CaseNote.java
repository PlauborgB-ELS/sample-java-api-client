/*
 * Pure API
 * This is an early access version of the new Pure write API.
 *
 * The version of the OpenAPI document: 0.1 Early Access
 * Contact: b.plauborg@elsevier.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elsevier.pure.api.sample.stubs.model;

import java.util.Objects;
import java.util.Arrays;
import com.elsevier.pure.api.sample.stubs.model.ClassifiedCaseNoteSource;
import com.elsevier.pure.api.sample.stubs.model.ExternalOrganizationRef;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;

/**
 * A note on a case, detailing title, judgement data and court processing case.
 */
@ApiModel(description = "A note on a case, detailing title, judgement data and court processing case.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-11T16:14:00.558+01:00[Europe/Copenhagen]")
public class CaseNote {
  public static final String SERIALIZED_NAME_PURE_ID = "pureId";
  @SerializedName(SERIALIZED_NAME_PURE_ID)
  private Long pureId;

  public static final String SERIALIZED_NAME_COURT = "court";
  @SerializedName(SERIALIZED_NAME_COURT)
  private ExternalOrganizationRef court;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private Map<String, String> title = null;

  public static final String SERIALIZED_NAME_JUDGEMENT_DATE = "judgementDate";
  @SerializedName(SERIALIZED_NAME_JUDGEMENT_DATE)
  private OffsetDateTime judgementDate;

  public static final String SERIALIZED_NAME_SOURCES = "sources";
  @SerializedName(SERIALIZED_NAME_SOURCES)
  private List<ClassifiedCaseNoteSource> sources = null;


   /**
   * Pure database ID of the object, prefer using the UUID if it is present on the entity
   * @return pureId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pure database ID of the object, prefer using the UUID if it is present on the entity")

  public Long getPureId() {
    return pureId;
  }




  public CaseNote court(ExternalOrganizationRef court) {
    
    this.court = court;
    return this;
  }

   /**
   * Get court
   * @return court
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public ExternalOrganizationRef getCourt() {
    return court;
  }


  public void setCourt(ExternalOrganizationRef court) {
    this.court = court;
  }


  public CaseNote title(Map<String, String> title) {
    
    this.title = title;
    return this;
  }

  public CaseNote putTitleItem(String key, String titleItem) {
    if (this.title == null) {
      this.title = new HashMap<String, String>();
    }
    this.title.put(key, titleItem);
    return this;
  }

   /**
   * A set of string values, one for each submission locale. Note: invalid locale values will be ignored.
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"en_GB\":\"Some text\"}", value = "A set of string values, one for each submission locale. Note: invalid locale values will be ignored.")

  public Map<String, String> getTitle() {
    return title;
  }


  public void setTitle(Map<String, String> title) {
    this.title = title;
  }


  public CaseNote judgementDate(OffsetDateTime judgementDate) {
    
    this.judgementDate = judgementDate;
    return this;
  }

   /**
   * The judgement date.
   * @return judgementDate
  **/
  @ApiModelProperty(required = true, value = "The judgement date.")

  public OffsetDateTime getJudgementDate() {
    return judgementDate;
  }


  public void setJudgementDate(OffsetDateTime judgementDate) {
    this.judgementDate = judgementDate;
  }


  public CaseNote sources(List<ClassifiedCaseNoteSource> sources) {
    
    this.sources = sources;
    return this;
  }

  public CaseNote addSourcesItem(ClassifiedCaseNoteSource sourcesItem) {
    if (this.sources == null) {
      this.sources = new ArrayList<ClassifiedCaseNoteSource>();
    }
    this.sources.add(sourcesItem);
    return this;
  }

   /**
   * Classified case note sources
   * @return sources
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Classified case note sources")

  public List<ClassifiedCaseNoteSource> getSources() {
    return sources;
  }


  public void setSources(List<ClassifiedCaseNoteSource> sources) {
    this.sources = sources;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CaseNote caseNote = (CaseNote) o;
    return Objects.equals(this.pureId, caseNote.pureId) &&
        Objects.equals(this.court, caseNote.court) &&
        Objects.equals(this.title, caseNote.title) &&
        Objects.equals(this.judgementDate, caseNote.judgementDate) &&
        Objects.equals(this.sources, caseNote.sources);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pureId, court, title, judgementDate, sources);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CaseNote {\n");
    sb.append("    pureId: ").append(toIndentedString(pureId)).append("\n");
    sb.append("    court: ").append(toIndentedString(court)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    judgementDate: ").append(toIndentedString(judgementDate)).append("\n");
    sb.append("    sources: ").append(toIndentedString(sources)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

