/*
 * Pure API
 * This is an early access version of the new Pure write API.
 *
 * The version of the OpenAPI document: 0.1 Early Access
 * Contact: b.plauborg@elsevier.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elsevier.pure.api.sample.stubs.model;

import java.util.Objects;
import java.util.Arrays;
import com.elsevier.pure.api.sample.stubs.model.ISSNRef;
import com.elsevier.pure.api.sample.stubs.model.JournalRef;
import com.elsevier.pure.api.sample.stubs.model.JournalTitleRef;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * A journal associated with a research output.
 */
@ApiModel(description = "A journal associated with a research output.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-28T22:49:29.739+02:00[Europe/Copenhagen]")
public class JournalAssociation {
  public static final String SERIALIZED_NAME_PURE_ID = "pureId";
  @SerializedName(SERIALIZED_NAME_PURE_ID)
  private Long pureId;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private JournalTitleRef title;

  public static final String SERIALIZED_NAME_ISSN = "issn";
  @SerializedName(SERIALIZED_NAME_ISSN)
  private ISSNRef issn;

  public static final String SERIALIZED_NAME_JOURNAL = "journal";
  @SerializedName(SERIALIZED_NAME_JOURNAL)
  private JournalRef journal;


   /**
   * Pure database ID of the object, prefer using the UUID if it is present on the entity
   * @return pureId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pure database ID of the object, prefer using the UUID if it is present on the entity")

  public Long getPureId() {
    return pureId;
  }




  public JournalAssociation title(JournalTitleRef title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JournalTitleRef getTitle() {
    return title;
  }


  public void setTitle(JournalTitleRef title) {
    this.title = title;
  }


  public JournalAssociation issn(ISSNRef issn) {
    
    this.issn = issn;
    return this;
  }

   /**
   * Get issn
   * @return issn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ISSNRef getIssn() {
    return issn;
  }


  public void setIssn(ISSNRef issn) {
    this.issn = issn;
  }


  public JournalAssociation journal(JournalRef journal) {
    
    this.journal = journal;
    return this;
  }

   /**
   * Get journal
   * @return journal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public JournalRef getJournal() {
    return journal;
  }


  public void setJournal(JournalRef journal) {
    this.journal = journal;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JournalAssociation journalAssociation = (JournalAssociation) o;
    return Objects.equals(this.pureId, journalAssociation.pureId) &&
        Objects.equals(this.title, journalAssociation.title) &&
        Objects.equals(this.issn, journalAssociation.issn) &&
        Objects.equals(this.journal, journalAssociation.journal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pureId, title, issn, journal);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JournalAssociation {\n");
    sb.append("    pureId: ").append(toIndentedString(pureId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    issn: ").append(toIndentedString(issn)).append("\n");
    sb.append("    journal: ").append(toIndentedString(journal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

