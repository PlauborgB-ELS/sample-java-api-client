/*
 * Pure API
 * This is an early access version of the new Pure write API.
 *
 * The version of the OpenAPI document: 0.1 Early Access
 * Contact: b.plauborg@elsevier.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elsevier.pure.api.sample.stubs.model;

import java.util.Objects;
import java.util.Arrays;
import com.elsevier.pure.api.sample.stubs.model.ClassificationRef;
import com.elsevier.pure.api.sample.stubs.model.ExternalOrganizationRef;
import com.elsevier.pure.api.sample.stubs.model.ExternalPersonRef;
import com.elsevier.pure.api.sample.stubs.model.Name;
import com.elsevier.pure.api.sample.stubs.model.OrganizationRef;
import com.elsevier.pure.api.sample.stubs.model.PersonRef;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * A supervisor on a research output.
 */
@ApiModel(description = "A supervisor on a research output.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-11T16:14:00.558+01:00[Europe/Copenhagen]")
public class SupervisorAssociation {
  public static final String SERIALIZED_NAME_PURE_ID = "pureId";
  @SerializedName(SERIALIZED_NAME_PURE_ID)
  private Long pureId;

  public static final String SERIALIZED_NAME_PERSON = "person";
  @SerializedName(SERIALIZED_NAME_PERSON)
  private PersonRef person;

  public static final String SERIALIZED_NAME_EXTERNAL_PERSON = "externalPerson";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_PERSON)
  private ExternalPersonRef externalPerson;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private Name name;

  public static final String SERIALIZED_NAME_ROLE = "role";
  @SerializedName(SERIALIZED_NAME_ROLE)
  private ClassificationRef role;

  public static final String SERIALIZED_NAME_ORGANISATIONAL_UNITS = "organisationalUnits";
  @SerializedName(SERIALIZED_NAME_ORGANISATIONAL_UNITS)
  private List<OrganizationRef> organisationalUnits = null;

  public static final String SERIALIZED_NAME_EXTERNAL_ORGANISATIONS = "externalOrganisations";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ORGANISATIONS)
  private List<ExternalOrganizationRef> externalOrganisations = null;


   /**
   * Pure database ID of the object, prefer using the UUID if it is present on the entity
   * @return pureId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pure database ID of the object, prefer using the UUID if it is present on the entity")

  public Long getPureId() {
    return pureId;
  }




  public SupervisorAssociation person(PersonRef person) {
    
    this.person = person;
    return this;
  }

   /**
   * Get person
   * @return person
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PersonRef getPerson() {
    return person;
  }


  public void setPerson(PersonRef person) {
    this.person = person;
  }


  public SupervisorAssociation externalPerson(ExternalPersonRef externalPerson) {
    
    this.externalPerson = externalPerson;
    return this;
  }

   /**
   * Get externalPerson
   * @return externalPerson
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ExternalPersonRef getExternalPerson() {
    return externalPerson;
  }


  public void setExternalPerson(ExternalPersonRef externalPerson) {
    this.externalPerson = externalPerson;
  }


  public SupervisorAssociation name(Name name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Name getName() {
    return name;
  }


  public void setName(Name name) {
    this.name = name;
  }


  public SupervisorAssociation role(ClassificationRef role) {
    
    this.role = role;
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ClassificationRef getRole() {
    return role;
  }


  public void setRole(ClassificationRef role) {
    this.role = role;
  }


  public SupervisorAssociation organisationalUnits(List<OrganizationRef> organisationalUnits) {
    
    this.organisationalUnits = organisationalUnits;
    return this;
  }

  public SupervisorAssociation addOrganisationalUnitsItem(OrganizationRef organisationalUnitsItem) {
    if (this.organisationalUnits == null) {
      this.organisationalUnits = new ArrayList<OrganizationRef>();
    }
    this.organisationalUnits.add(organisationalUnitsItem);
    return this;
  }

   /**
   * A collection of organisational unit affiliations.
   * @return organisationalUnits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A collection of organisational unit affiliations.")

  public List<OrganizationRef> getOrganisationalUnits() {
    return organisationalUnits;
  }


  public void setOrganisationalUnits(List<OrganizationRef> organisationalUnits) {
    this.organisationalUnits = organisationalUnits;
  }


  public SupervisorAssociation externalOrganisations(List<ExternalOrganizationRef> externalOrganisations) {
    
    this.externalOrganisations = externalOrganisations;
    return this;
  }

  public SupervisorAssociation addExternalOrganisationsItem(ExternalOrganizationRef externalOrganisationsItem) {
    if (this.externalOrganisations == null) {
      this.externalOrganisations = new ArrayList<ExternalOrganizationRef>();
    }
    this.externalOrganisations.add(externalOrganisationsItem);
    return this;
  }

   /**
   * A collection of external organisation affiliations.
   * @return externalOrganisations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A collection of external organisation affiliations.")

  public List<ExternalOrganizationRef> getExternalOrganisations() {
    return externalOrganisations;
  }


  public void setExternalOrganisations(List<ExternalOrganizationRef> externalOrganisations) {
    this.externalOrganisations = externalOrganisations;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SupervisorAssociation supervisorAssociation = (SupervisorAssociation) o;
    return Objects.equals(this.pureId, supervisorAssociation.pureId) &&
        Objects.equals(this.person, supervisorAssociation.person) &&
        Objects.equals(this.externalPerson, supervisorAssociation.externalPerson) &&
        Objects.equals(this.name, supervisorAssociation.name) &&
        Objects.equals(this.role, supervisorAssociation.role) &&
        Objects.equals(this.organisationalUnits, supervisorAssociation.organisationalUnits) &&
        Objects.equals(this.externalOrganisations, supervisorAssociation.externalOrganisations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pureId, person, externalPerson, name, role, organisationalUnits, externalOrganisations);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SupervisorAssociation {\n");
    sb.append("    pureId: ").append(toIndentedString(pureId)).append("\n");
    sb.append("    person: ").append(toIndentedString(person)).append("\n");
    sb.append("    externalPerson: ").append(toIndentedString(externalPerson)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    organisationalUnits: ").append(toIndentedString(organisationalUnits)).append("\n");
    sb.append("    externalOrganisations: ").append(toIndentedString(externalOrganisations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

