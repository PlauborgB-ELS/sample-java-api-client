/*
 * Pure API
 * This is an early access version of the new Pure write API.
 *
 * The version of the OpenAPI document: 0.1 Early Access
 * Contact: b.plauborg@elsevier.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elsevier.pure.api.sample.stubs.model;

import java.util.Objects;
import java.util.Arrays;
import com.elsevier.pure.api.sample.stubs.model.AdditionalISSN;
import com.elsevier.pure.api.sample.stubs.model.ClassificationRef;
import com.elsevier.pure.api.sample.stubs.model.ISSN;
import com.elsevier.pure.api.sample.stubs.model.Identifier;
import com.elsevier.pure.api.sample.stubs.model.JournalTitle;
import com.elsevier.pure.api.sample.stubs.model.KeywordGroup;
import com.elsevier.pure.api.sample.stubs.model.Link;
import com.elsevier.pure.api.sample.stubs.model.PublisherRef;
import com.elsevier.pure.api.sample.stubs.model.Workflow;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * A periodical presenting articles on a particular subject.
 */
@ApiModel(description = "A periodical presenting articles on a particular subject.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-28T22:49:29.739+02:00[Europe/Copenhagen]")
public class Journal {
  public static final String SERIALIZED_NAME_PURE_ID = "pureId";
  @SerializedName(SERIALIZED_NAME_PURE_ID)
  private Long pureId;

  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private UUID uuid;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private String createdBy;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private OffsetDateTime createdDate;

  public static final String SERIALIZED_NAME_MODIFIED_BY = "modifiedBy";
  @SerializedName(SERIALIZED_NAME_MODIFIED_BY)
  private String modifiedBy;

  public static final String SERIALIZED_NAME_MODIFIED_DATE = "modifiedDate";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE)
  private OffsetDateTime modifiedDate;

  public static final String SERIALIZED_NAME_PORTAL_URL = "portalUrl";
  @SerializedName(SERIALIZED_NAME_PORTAL_URL)
  private String portalUrl;

  public static final String SERIALIZED_NAME_PRETTY_URL_IDENTIFIERS = "prettyUrlIdentifiers";
  @SerializedName(SERIALIZED_NAME_PRETTY_URL_IDENTIFIERS)
  private List<String> prettyUrlIdentifiers = null;

  public static final String SERIALIZED_NAME_PREVIOUS_UUIDS = "previousUuids";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_UUIDS)
  private List<String> previousUuids = null;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_ISSNS = "issns";
  @SerializedName(SERIALIZED_NAME_ISSNS)
  private List<ISSN> issns = null;

  public static final String SERIALIZED_NAME_ADDITIONAL_SEARCHABLE_ISSNS = "additionalSearchableIssns";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_SEARCHABLE_ISSNS)
  private List<AdditionalISSN> additionalSearchableIssns = null;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private ClassificationRef country;

  public static final String SERIALIZED_NAME_INDEXED_IN_DOAJ = "indexedInDoaj";
  @SerializedName(SERIALIZED_NAME_INDEXED_IN_DOAJ)
  private Boolean indexedInDoaj;

  public static final String SERIALIZED_NAME_KEYWORD_GROUPS = "keywordGroups";
  @SerializedName(SERIALIZED_NAME_KEYWORD_GROUPS)
  private List<KeywordGroup> keywordGroups = null;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private List<Link> links = null;

  public static final String SERIALIZED_NAME_PUBLISHER = "publisher";
  @SerializedName(SERIALIZED_NAME_PUBLISHER)
  private PublisherRef publisher;

  public static final String SERIALIZED_NAME_IDENTIFIERS = "identifiers";
  @SerializedName(SERIALIZED_NAME_IDENTIFIERS)
  private List<Identifier> identifiers = null;

  public static final String SERIALIZED_NAME_TITLES = "titles";
  @SerializedName(SERIALIZED_NAME_TITLES)
  private List<JournalTitle> titles = null;

  public static final String SERIALIZED_NAME_ADDITIONAL_SEARCHABLE_TITLES = "additionalSearchableTitles";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_SEARCHABLE_TITLES)
  private List<String> additionalSearchableTitles = null;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private ClassificationRef type;

  public static final String SERIALIZED_NAME_WORKFLOW = "workflow";
  @SerializedName(SERIALIZED_NAME_WORKFLOW)
  private Workflow workflow;

  public static final String SERIALIZED_NAME_SYSTEM_NAME = "systemName";
  @SerializedName(SERIALIZED_NAME_SYSTEM_NAME)
  private String systemName;


   /**
   * Pure database ID of the object, prefer using the UUID if it is present on the entity
   * @return pureId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pure database ID of the object, prefer using the UUID if it is present on the entity")

  public Long getPureId() {
    return pureId;
  }




   /**
   * UUID, this is the primary identity of the entity
   * @return uuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UUID, this is the primary identity of the entity")

  public UUID getUuid() {
    return uuid;
  }




   /**
   * Username of creator
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Username of creator")

  public String getCreatedBy() {
    return createdBy;
  }




   /**
   * Date and time of creation
   * @return createdDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date and time of creation")

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }




   /**
   * Username of the user that performed a modification
   * @return modifiedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Username of the user that performed a modification")

  public String getModifiedBy() {
    return modifiedBy;
  }




   /**
   * Date and time of last modification
   * @return modifiedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date and time of last modification")

  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }




   /**
   * URL of the content on the Pure Portal
   * @return portalUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URL of the content on the Pure Portal")

  public String getPortalUrl() {
    return portalUrl;
  }




   /**
   * All pretty URLs
   * @return prettyUrlIdentifiers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "All pretty URLs")

  public List<String> getPrettyUrlIdentifiers() {
    return prettyUrlIdentifiers;
  }




   /**
   * UUIDs of other content items which have been merged into this content item (or similar)
   * @return previousUuids
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UUIDs of other content items which have been merged into this content item (or similar)")

  public List<String> getPreviousUuids() {
    return previousUuids;
  }




  public Journal version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * A hash representing the current version of the content. For new content this is null, and for existing content the current value. The property should never be modified explicitly by a client.
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A hash representing the current version of the content. For new content this is null, and for existing content the current value. The property should never be modified explicitly by a client.")

  public String getVersion() {
    return version;
  }


  public void setVersion(String version) {
    this.version = version;
  }


  public Journal issns(List<ISSN> issns) {
    
    this.issns = issns;
    return this;
  }

  public Journal addIssnsItem(ISSN issnsItem) {
    if (this.issns == null) {
      this.issns = new ArrayList<ISSN>();
    }
    this.issns.add(issnsItem);
    return this;
  }

   /**
   * International Standard Serial Numbers of the journal, ISSNs in this list are searchable and selectable when relating the journal to other content
   * @return issns
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "International Standard Serial Numbers of the journal, ISSNs in this list are searchable and selectable when relating the journal to other content")

  public List<ISSN> getIssns() {
    return issns;
  }


  public void setIssns(List<ISSN> issns) {
    this.issns = issns;
  }


  public Journal additionalSearchableIssns(List<AdditionalISSN> additionalSearchableIssns) {
    
    this.additionalSearchableIssns = additionalSearchableIssns;
    return this;
  }

  public Journal addAdditionalSearchableIssnsItem(AdditionalISSN additionalSearchableIssnsItem) {
    if (this.additionalSearchableIssns == null) {
      this.additionalSearchableIssns = new ArrayList<AdditionalISSN>();
    }
    this.additionalSearchableIssns.add(additionalSearchableIssnsItem);
    return this;
  }

   /**
   * Additional International Standard Serial Numbers of the journal, ISSNs in this list are searchable but not selectable when relating the journal to other content
   * @return additionalSearchableIssns
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional International Standard Serial Numbers of the journal, ISSNs in this list are searchable but not selectable when relating the journal to other content")

  public List<AdditionalISSN> getAdditionalSearchableIssns() {
    return additionalSearchableIssns;
  }


  public void setAdditionalSearchableIssns(List<AdditionalISSN> additionalSearchableIssns) {
    this.additionalSearchableIssns = additionalSearchableIssns;
  }


  public Journal country(ClassificationRef country) {
    
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ClassificationRef getCountry() {
    return country;
  }


  public void setCountry(ClassificationRef country) {
    this.country = country;
  }


  public Journal indexedInDoaj(Boolean indexedInDoaj) {
    
    this.indexedInDoaj = indexedInDoaj;
    return this;
  }

   /**
   * Whether the journal is present in the Directory of Open Access Journals
   * @return indexedInDoaj
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the journal is present in the Directory of Open Access Journals")

  public Boolean getIndexedInDoaj() {
    return indexedInDoaj;
  }


  public void setIndexedInDoaj(Boolean indexedInDoaj) {
    this.indexedInDoaj = indexedInDoaj;
  }


  public Journal keywordGroups(List<KeywordGroup> keywordGroups) {
    
    this.keywordGroups = keywordGroups;
    return this;
  }

  public Journal addKeywordGroupsItem(KeywordGroup keywordGroupsItem) {
    if (this.keywordGroups == null) {
      this.keywordGroups = new ArrayList<KeywordGroup>();
    }
    this.keywordGroups.add(keywordGroupsItem);
    return this;
  }

   /**
   * Keywords associated with the journal
   * @return keywordGroups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Keywords associated with the journal")

  public List<KeywordGroup> getKeywordGroups() {
    return keywordGroups;
  }


  public void setKeywordGroups(List<KeywordGroup> keywordGroups) {
    this.keywordGroups = keywordGroups;
  }


  public Journal links(List<Link> links) {
    
    this.links = links;
    return this;
  }

  public Journal addLinksItem(Link linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<Link>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Links to websites or other URLs associated with the journal
   * @return links
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Links to websites or other URLs associated with the journal")

  public List<Link> getLinks() {
    return links;
  }


  public void setLinks(List<Link> links) {
    this.links = links;
  }


  public Journal publisher(PublisherRef publisher) {
    
    this.publisher = publisher;
    return this;
  }

   /**
   * Get publisher
   * @return publisher
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PublisherRef getPublisher() {
    return publisher;
  }


  public void setPublisher(PublisherRef publisher) {
    this.publisher = publisher;
  }


  public Journal identifiers(List<Identifier> identifiers) {
    
    this.identifiers = identifiers;
    return this;
  }

  public Journal addIdentifiersItem(Identifier identifiersItem) {
    if (this.identifiers == null) {
      this.identifiers = new ArrayList<Identifier>();
    }
    this.identifiers.add(identifiersItem);
    return this;
  }

   /**
   * Identifiers of the Journal, often used to identify the journal in other sources, an example could be the Scopus Id of the journal
   * @return identifiers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifiers of the Journal, often used to identify the journal in other sources, an example could be the Scopus Id of the journal")

  public List<Identifier> getIdentifiers() {
    return identifiers;
  }


  public void setIdentifiers(List<Identifier> identifiers) {
    this.identifiers = identifiers;
  }


  public Journal titles(List<JournalTitle> titles) {
    
    this.titles = titles;
    return this;
  }

  public Journal addTitlesItem(JournalTitle titlesItem) {
    if (this.titles == null) {
      this.titles = new ArrayList<JournalTitle>();
    }
    this.titles.add(titlesItem);
    return this;
  }

   /**
   * Titles of the journal, these titles will be available for use when relating the journal to other content.
   * @return titles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Titles of the journal, these titles will be available for use when relating the journal to other content.")

  public List<JournalTitle> getTitles() {
    return titles;
  }


  public void setTitles(List<JournalTitle> titles) {
    this.titles = titles;
  }


  public Journal additionalSearchableTitles(List<String> additionalSearchableTitles) {
    
    this.additionalSearchableTitles = additionalSearchableTitles;
    return this;
  }

  public Journal addAdditionalSearchableTitlesItem(String additionalSearchableTitlesItem) {
    if (this.additionalSearchableTitles == null) {
      this.additionalSearchableTitles = new ArrayList<String>();
    }
    this.additionalSearchableTitles.add(additionalSearchableTitlesItem);
    return this;
  }

   /**
   * Additional searchable titles of the journal, often abbreviations that are not used to show a journal, cannot be used when relating the journal to other content.
   * @return additionalSearchableTitles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional searchable titles of the journal, often abbreviations that are not used to show a journal, cannot be used when relating the journal to other content.")

  public List<String> getAdditionalSearchableTitles() {
    return additionalSearchableTitles;
  }


  public void setAdditionalSearchableTitles(List<String> additionalSearchableTitles) {
    this.additionalSearchableTitles = additionalSearchableTitles;
  }


  public Journal type(ClassificationRef type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ClassificationRef getType() {
    return type;
  }


  public void setType(ClassificationRef type) {
    this.type = type;
  }


  public Journal workflow(Workflow workflow) {
    
    this.workflow = workflow;
    return this;
  }

   /**
   * Get workflow
   * @return workflow
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Workflow getWorkflow() {
    return workflow;
  }


  public void setWorkflow(Workflow workflow) {
    this.workflow = workflow;
  }


   /**
   * The content system name
   * @return systemName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The content system name")

  public String getSystemName() {
    return systemName;
  }




  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Journal journal = (Journal) o;
    return Objects.equals(this.pureId, journal.pureId) &&
        Objects.equals(this.uuid, journal.uuid) &&
        Objects.equals(this.createdBy, journal.createdBy) &&
        Objects.equals(this.createdDate, journal.createdDate) &&
        Objects.equals(this.modifiedBy, journal.modifiedBy) &&
        Objects.equals(this.modifiedDate, journal.modifiedDate) &&
        Objects.equals(this.portalUrl, journal.portalUrl) &&
        Objects.equals(this.prettyUrlIdentifiers, journal.prettyUrlIdentifiers) &&
        Objects.equals(this.previousUuids, journal.previousUuids) &&
        Objects.equals(this.version, journal.version) &&
        Objects.equals(this.issns, journal.issns) &&
        Objects.equals(this.additionalSearchableIssns, journal.additionalSearchableIssns) &&
        Objects.equals(this.country, journal.country) &&
        Objects.equals(this.indexedInDoaj, journal.indexedInDoaj) &&
        Objects.equals(this.keywordGroups, journal.keywordGroups) &&
        Objects.equals(this.links, journal.links) &&
        Objects.equals(this.publisher, journal.publisher) &&
        Objects.equals(this.identifiers, journal.identifiers) &&
        Objects.equals(this.titles, journal.titles) &&
        Objects.equals(this.additionalSearchableTitles, journal.additionalSearchableTitles) &&
        Objects.equals(this.type, journal.type) &&
        Objects.equals(this.workflow, journal.workflow) &&
        Objects.equals(this.systemName, journal.systemName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pureId, uuid, createdBy, createdDate, modifiedBy, modifiedDate, portalUrl, prettyUrlIdentifiers, previousUuids, version, issns, additionalSearchableIssns, country, indexedInDoaj, keywordGroups, links, publisher, identifiers, titles, additionalSearchableTitles, type, workflow, systemName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Journal {\n");
    sb.append("    pureId: ").append(toIndentedString(pureId)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    portalUrl: ").append(toIndentedString(portalUrl)).append("\n");
    sb.append("    prettyUrlIdentifiers: ").append(toIndentedString(prettyUrlIdentifiers)).append("\n");
    sb.append("    previousUuids: ").append(toIndentedString(previousUuids)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    issns: ").append(toIndentedString(issns)).append("\n");
    sb.append("    additionalSearchableIssns: ").append(toIndentedString(additionalSearchableIssns)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    indexedInDoaj: ").append(toIndentedString(indexedInDoaj)).append("\n");
    sb.append("    keywordGroups: ").append(toIndentedString(keywordGroups)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    publisher: ").append(toIndentedString(publisher)).append("\n");
    sb.append("    identifiers: ").append(toIndentedString(identifiers)).append("\n");
    sb.append("    titles: ").append(toIndentedString(titles)).append("\n");
    sb.append("    additionalSearchableTitles: ").append(toIndentedString(additionalSearchableTitles)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    workflow: ").append(toIndentedString(workflow)).append("\n");
    sb.append("    systemName: ").append(toIndentedString(systemName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

