/*
 * Pure API
 * This is an early access version of the new Pure write API.
 *
 * The version of the OpenAPI document: 0.1 Early Access
 * Contact: b.plauborg@elsevier.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elsevier.pure.api.sample.stubs.model;

import java.util.Objects;
import java.util.Arrays;
import com.elsevier.pure.api.sample.stubs.model.ClassificationRef;
import com.elsevier.pure.api.sample.stubs.model.ExternalOrganizationRef;
import com.elsevier.pure.api.sample.stubs.model.Gender;
import com.elsevier.pure.api.sample.stubs.model.Identifier;
import com.elsevier.pure.api.sample.stubs.model.KeywordGroup;
import com.elsevier.pure.api.sample.stubs.model.Name;
import com.elsevier.pure.api.sample.stubs.model.Workflow;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * A person not known to the institution
 */
@ApiModel(description = "A person not known to the institution")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-21T09:12:55.713+02:00[Europe/Copenhagen]")
public class ExternalPerson {
  public static final String SERIALIZED_NAME_PURE_ID = "pureId";
  @SerializedName(SERIALIZED_NAME_PURE_ID)
  private Long pureId;

  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private UUID uuid;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private String createdBy;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private OffsetDateTime createdDate;

  public static final String SERIALIZED_NAME_MODIFIED_BY = "modifiedBy";
  @SerializedName(SERIALIZED_NAME_MODIFIED_BY)
  private String modifiedBy;

  public static final String SERIALIZED_NAME_MODIFIED_DATE = "modifiedDate";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE)
  private OffsetDateTime modifiedDate;

  public static final String SERIALIZED_NAME_PORTAL_URL = "portalUrl";
  @SerializedName(SERIALIZED_NAME_PORTAL_URL)
  private String portalUrl;

  public static final String SERIALIZED_NAME_PRETTY_URL_IDENTIFIERS = "prettyUrlIdentifiers";
  @SerializedName(SERIALIZED_NAME_PRETTY_URL_IDENTIFIERS)
  private List<String> prettyUrlIdentifiers = null;

  public static final String SERIALIZED_NAME_PREVIOUS_UUIDS = "previousUuids";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_UUIDS)
  private List<String> previousUuids = null;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_IDENTIFIERS = "identifiers";
  @SerializedName(SERIALIZED_NAME_IDENTIFIERS)
  private List<Identifier> identifiers = null;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private Name name;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private ClassificationRef type;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private Map<String, String> title = null;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private ClassificationRef country;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private Gender gender;

  public static final String SERIALIZED_NAME_EXTERNAL_ORGANISATIONS = "externalOrganisations";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ORGANISATIONS)
  private List<ExternalOrganizationRef> externalOrganisations = null;

  public static final String SERIALIZED_NAME_KEYWORD_GROUPS = "keywordGroups";
  @SerializedName(SERIALIZED_NAME_KEYWORD_GROUPS)
  private List<KeywordGroup> keywordGroups = null;

  public static final String SERIALIZED_NAME_WORKFLOW = "workflow";
  @SerializedName(SERIALIZED_NAME_WORKFLOW)
  private Workflow workflow;

  public static final String SERIALIZED_NAME_SYSTEM_NAME = "systemName";
  @SerializedName(SERIALIZED_NAME_SYSTEM_NAME)
  private String systemName;


   /**
   * Pure database ID of the object, prefer using the UUID if it is present on the entity
   * @return pureId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pure database ID of the object, prefer using the UUID if it is present on the entity")

  public Long getPureId() {
    return pureId;
  }




   /**
   * UUID, this is the primary identity of the entity
   * @return uuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UUID, this is the primary identity of the entity")

  public UUID getUuid() {
    return uuid;
  }




   /**
   * Username of creator
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Username of creator")

  public String getCreatedBy() {
    return createdBy;
  }




   /**
   * Date and time of creation
   * @return createdDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date and time of creation")

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }




   /**
   * Username of the user that performed a modification
   * @return modifiedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Username of the user that performed a modification")

  public String getModifiedBy() {
    return modifiedBy;
  }




   /**
   * Date and time of last modification
   * @return modifiedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date and time of last modification")

  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }




   /**
   * URL of the content on the Pure Portal
   * @return portalUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URL of the content on the Pure Portal")

  public String getPortalUrl() {
    return portalUrl;
  }




   /**
   * All pretty URLs
   * @return prettyUrlIdentifiers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "All pretty URLs")

  public List<String> getPrettyUrlIdentifiers() {
    return prettyUrlIdentifiers;
  }




   /**
   * UUIDs of other content items which have been merged into this content item (or similar)
   * @return previousUuids
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UUIDs of other content items which have been merged into this content item (or similar)")

  public List<String> getPreviousUuids() {
    return previousUuids;
  }




  public ExternalPerson version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * A hash representing the current version of the content. For new content this is null, and for existing content the current value. The property should never be modified explicitly by a client.
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A hash representing the current version of the content. For new content this is null, and for existing content the current value. The property should never be modified explicitly by a client.")

  public String getVersion() {
    return version;
  }


  public void setVersion(String version) {
    this.version = version;
  }


  public ExternalPerson identifiers(List<Identifier> identifiers) {
    
    this.identifiers = identifiers;
    return this;
  }

  public ExternalPerson addIdentifiersItem(Identifier identifiersItem) {
    if (this.identifiers == null) {
      this.identifiers = new ArrayList<Identifier>();
    }
    this.identifiers.add(identifiersItem);
    return this;
  }

   /**
   * IDs that this object corresponds to in external systems. Such as a Scopus ID. Used by Pure where it is necessary to identify objects to specific external systems
   * @return identifiers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "IDs that this object corresponds to in external systems. Such as a Scopus ID. Used by Pure where it is necessary to identify objects to specific external systems")

  public List<Identifier> getIdentifiers() {
    return identifiers;
  }


  public void setIdentifiers(List<Identifier> identifiers) {
    this.identifiers = identifiers;
  }


  public ExternalPerson name(Name name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Name getName() {
    return name;
  }


  public void setName(Name name) {
    this.name = name;
  }


  public ExternalPerson type(ClassificationRef type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ClassificationRef getType() {
    return type;
  }


  public void setType(ClassificationRef type) {
    this.type = type;
  }


  public ExternalPerson title(Map<String, String> title) {
    
    this.title = title;
    return this;
  }

  public ExternalPerson putTitleItem(String key, String titleItem) {
    if (this.title == null) {
      this.title = new HashMap<String, String>();
    }
    this.title.put(key, titleItem);
    return this;
  }

   /**
   * A set of string values, one for each submission locale. Note: invalid locale values will be ignored.
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"en_GB\":\"Some text\"}", value = "A set of string values, one for each submission locale. Note: invalid locale values will be ignored.")

  public Map<String, String> getTitle() {
    return title;
  }


  public void setTitle(Map<String, String> title) {
    this.title = title;
  }


  public ExternalPerson country(ClassificationRef country) {
    
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ClassificationRef getCountry() {
    return country;
  }


  public void setCountry(ClassificationRef country) {
    this.country = country;
  }


  public ExternalPerson gender(Gender gender) {
    
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Gender getGender() {
    return gender;
  }


  public void setGender(Gender gender) {
    this.gender = gender;
  }


  public ExternalPerson externalOrganisations(List<ExternalOrganizationRef> externalOrganisations) {
    
    this.externalOrganisations = externalOrganisations;
    return this;
  }

  public ExternalPerson addExternalOrganisationsItem(ExternalOrganizationRef externalOrganisationsItem) {
    if (this.externalOrganisations == null) {
      this.externalOrganisations = new ArrayList<ExternalOrganizationRef>();
    }
    this.externalOrganisations.add(externalOrganisationsItem);
    return this;
  }

   /**
   * Get externalOrganisations
   * @return externalOrganisations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ExternalOrganizationRef> getExternalOrganisations() {
    return externalOrganisations;
  }


  public void setExternalOrganisations(List<ExternalOrganizationRef> externalOrganisations) {
    this.externalOrganisations = externalOrganisations;
  }


  public ExternalPerson keywordGroups(List<KeywordGroup> keywordGroups) {
    
    this.keywordGroups = keywordGroups;
    return this;
  }

  public ExternalPerson addKeywordGroupsItem(KeywordGroup keywordGroupsItem) {
    if (this.keywordGroups == null) {
      this.keywordGroups = new ArrayList<KeywordGroup>();
    }
    this.keywordGroups.add(keywordGroupsItem);
    return this;
  }

   /**
   * Get keywordGroups
   * @return keywordGroups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<KeywordGroup> getKeywordGroups() {
    return keywordGroups;
  }


  public void setKeywordGroups(List<KeywordGroup> keywordGroups) {
    this.keywordGroups = keywordGroups;
  }


  public ExternalPerson workflow(Workflow workflow) {
    
    this.workflow = workflow;
    return this;
  }

   /**
   * Get workflow
   * @return workflow
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Workflow getWorkflow() {
    return workflow;
  }


  public void setWorkflow(Workflow workflow) {
    this.workflow = workflow;
  }


   /**
   * The content system name
   * @return systemName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The content system name")

  public String getSystemName() {
    return systemName;
  }




  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExternalPerson externalPerson = (ExternalPerson) o;
    return Objects.equals(this.pureId, externalPerson.pureId) &&
        Objects.equals(this.uuid, externalPerson.uuid) &&
        Objects.equals(this.createdBy, externalPerson.createdBy) &&
        Objects.equals(this.createdDate, externalPerson.createdDate) &&
        Objects.equals(this.modifiedBy, externalPerson.modifiedBy) &&
        Objects.equals(this.modifiedDate, externalPerson.modifiedDate) &&
        Objects.equals(this.portalUrl, externalPerson.portalUrl) &&
        Objects.equals(this.prettyUrlIdentifiers, externalPerson.prettyUrlIdentifiers) &&
        Objects.equals(this.previousUuids, externalPerson.previousUuids) &&
        Objects.equals(this.version, externalPerson.version) &&
        Objects.equals(this.identifiers, externalPerson.identifiers) &&
        Objects.equals(this.name, externalPerson.name) &&
        Objects.equals(this.type, externalPerson.type) &&
        Objects.equals(this.title, externalPerson.title) &&
        Objects.equals(this.country, externalPerson.country) &&
        Objects.equals(this.gender, externalPerson.gender) &&
        Objects.equals(this.externalOrganisations, externalPerson.externalOrganisations) &&
        Objects.equals(this.keywordGroups, externalPerson.keywordGroups) &&
        Objects.equals(this.workflow, externalPerson.workflow) &&
        Objects.equals(this.systemName, externalPerson.systemName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pureId, uuid, createdBy, createdDate, modifiedBy, modifiedDate, portalUrl, prettyUrlIdentifiers, previousUuids, version, identifiers, name, type, title, country, gender, externalOrganisations, keywordGroups, workflow, systemName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExternalPerson {\n");
    sb.append("    pureId: ").append(toIndentedString(pureId)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    portalUrl: ").append(toIndentedString(portalUrl)).append("\n");
    sb.append("    prettyUrlIdentifiers: ").append(toIndentedString(prettyUrlIdentifiers)).append("\n");
    sb.append("    previousUuids: ").append(toIndentedString(previousUuids)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    identifiers: ").append(toIndentedString(identifiers)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    externalOrganisations: ").append(toIndentedString(externalOrganisations)).append("\n");
    sb.append("    keywordGroups: ").append(toIndentedString(keywordGroups)).append("\n");
    sb.append("    workflow: ").append(toIndentedString(workflow)).append("\n");
    sb.append("    systemName: ").append(toIndentedString(systemName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

