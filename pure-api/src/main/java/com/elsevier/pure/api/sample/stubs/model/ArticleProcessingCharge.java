/*
 * Pure API
 * This is an early access version of the new Pure write API.
 *
 * The version of the OpenAPI document: 0.1 Early Access
 * Contact: b.plauborg@elsevier.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elsevier.pure.api.sample.stubs.model;

import java.util.Objects;
import java.util.Arrays;
import com.elsevier.pure.api.sample.stubs.model.ClassificationRef;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Holds information on the article processing charge
 */
@ApiModel(description = "Holds information on the article processing charge")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-21T09:12:55.713+02:00[Europe/Copenhagen]")
public class ArticleProcessingCharge {
  public static final String SERIALIZED_NAME_PAID = "paid";
  @SerializedName(SERIALIZED_NAME_PAID)
  private Boolean paid;

  public static final String SERIALIZED_NAME_AMOUNT_IN_CURRENCY = "amountInCurrency";
  @SerializedName(SERIALIZED_NAME_AMOUNT_IN_CURRENCY)
  private Double amountInCurrency;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private ClassificationRef currency;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Double amount;


  public ArticleProcessingCharge paid(Boolean paid) {
    
    this.paid = paid;
    return this;
  }

   /**
   * This value is true if the processing charge has been paid, false if not and null/not presentif unknown or not noted on content.
   * @return paid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This value is true if the processing charge has been paid, false if not and null/not presentif unknown or not noted on content.")

  public Boolean getPaid() {
    return paid;
  }


  public void setPaid(Boolean paid) {
    this.paid = paid;
  }


  public ArticleProcessingCharge amountInCurrency(Double amountInCurrency) {
    
    this.amountInCurrency = amountInCurrency;
    return this;
  }

   /**
   * A real number denoting the amount paid in the selected currency.
   * @return amountInCurrency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A real number denoting the amount paid in the selected currency.")

  public Double getAmountInCurrency() {
    return amountInCurrency;
  }


  public void setAmountInCurrency(Double amountInCurrency) {
    this.amountInCurrency = amountInCurrency;
  }


  public ArticleProcessingCharge currency(ClassificationRef currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ClassificationRef getCurrency() {
    return currency;
  }


  public void setCurrency(ClassificationRef currency) {
    this.currency = currency;
  }


  public ArticleProcessingCharge amount(Double amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * A real number denoting the amount paid in the system currency.
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A real number denoting the amount paid in the system currency.")

  public Double getAmount() {
    return amount;
  }


  public void setAmount(Double amount) {
    this.amount = amount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ArticleProcessingCharge articleProcessingCharge = (ArticleProcessingCharge) o;
    return Objects.equals(this.paid, articleProcessingCharge.paid) &&
        Objects.equals(this.amountInCurrency, articleProcessingCharge.amountInCurrency) &&
        Objects.equals(this.currency, articleProcessingCharge.currency) &&
        Objects.equals(this.amount, articleProcessingCharge.amount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paid, amountInCurrency, currency, amount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ArticleProcessingCharge {\n");
    sb.append("    paid: ").append(toIndentedString(paid)).append("\n");
    sb.append("    amountInCurrency: ").append(toIndentedString(amountInCurrency)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

