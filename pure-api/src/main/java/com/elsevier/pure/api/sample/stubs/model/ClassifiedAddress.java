/*
 * Pure API
 * This is an early access version of the new Pure write API.
 *
 * The version of the OpenAPI document: 0.1 Early Access
 * Contact: b.plauborg@elsevier.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elsevier.pure.api.sample.stubs.model;

import java.util.Objects;
import java.util.Arrays;
import com.elsevier.pure.api.sample.stubs.model.ClassificationRef;
import com.elsevier.pure.api.sample.stubs.model.GeoLocation;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * A physical address
 */
@ApiModel(description = "A physical address")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-28T22:49:29.739+02:00[Europe/Copenhagen]")
public class ClassifiedAddress {
  public static final String SERIALIZED_NAME_PURE_ID = "pureId";
  @SerializedName(SERIALIZED_NAME_PURE_ID)
  private Long pureId;

  public static final String SERIALIZED_NAME_ADDRESS_TYPE = "addressType";
  @SerializedName(SERIALIZED_NAME_ADDRESS_TYPE)
  private ClassificationRef addressType;

  public static final String SERIALIZED_NAME_ADDRESS_LINES = "addressLines";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINES)
  private String addressLines;

  public static final String SERIALIZED_NAME_STREET = "street";
  @SerializedName(SERIALIZED_NAME_STREET)
  private String street;

  public static final String SERIALIZED_NAME_BUILDING = "building";
  @SerializedName(SERIALIZED_NAME_BUILDING)
  private String building;

  public static final String SERIALIZED_NAME_POSTALCODE = "postalcode";
  @SerializedName(SERIALIZED_NAME_POSTALCODE)
  private String postalcode;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private ClassificationRef country;

  public static final String SERIALIZED_NAME_SUBDIVISION = "subdivision";
  @SerializedName(SERIALIZED_NAME_SUBDIVISION)
  private ClassificationRef subdivision;

  public static final String SERIALIZED_NAME_GEO_LOCATION = "geoLocation";
  @SerializedName(SERIALIZED_NAME_GEO_LOCATION)
  private GeoLocation geoLocation;


   /**
   * Pure database ID of the object, prefer using the UUID if it is present on the entity
   * @return pureId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pure database ID of the object, prefer using the UUID if it is present on the entity")

  public Long getPureId() {
    return pureId;
  }




  public ClassifiedAddress addressType(ClassificationRef addressType) {
    
    this.addressType = addressType;
    return this;
  }

   /**
   * Get addressType
   * @return addressType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ClassificationRef getAddressType() {
    return addressType;
  }


  public void setAddressType(ClassificationRef addressType) {
    this.addressType = addressType;
  }


  public ClassifiedAddress addressLines(String addressLines) {
    
    this.addressLines = addressLines;
    return this;
  }

   /**
   * Address for personal residence
   * @return addressLines
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Address for personal residence")

  public String getAddressLines() {
    return addressLines;
  }


  public void setAddressLines(String addressLines) {
    this.addressLines = addressLines;
  }


  public ClassifiedAddress street(String street) {
    
    this.street = street;
    return this;
  }

   /**
   * The name of the street
   * @return street
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the street")

  public String getStreet() {
    return street;
  }


  public void setStreet(String street) {
    this.street = street;
  }


  public ClassifiedAddress building(String building) {
    
    this.building = building;
    return this;
  }

   /**
   * The name of the building
   * @return building
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the building")

  public String getBuilding() {
    return building;
  }


  public void setBuilding(String building) {
    this.building = building;
  }


  public ClassifiedAddress postalcode(String postalcode) {
    
    this.postalcode = postalcode;
    return this;
  }

   /**
   * The postal code of the city
   * @return postalcode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The postal code of the city")

  public String getPostalcode() {
    return postalcode;
  }


  public void setPostalcode(String postalcode) {
    this.postalcode = postalcode;
  }


  public ClassifiedAddress city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * The name of the city
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the city")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    this.city = city;
  }


  public ClassifiedAddress country(ClassificationRef country) {
    
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ClassificationRef getCountry() {
    return country;
  }


  public void setCountry(ClassificationRef country) {
    this.country = country;
  }


  public ClassifiedAddress subdivision(ClassificationRef subdivision) {
    
    this.subdivision = subdivision;
    return this;
  }

   /**
   * Get subdivision
   * @return subdivision
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ClassificationRef getSubdivision() {
    return subdivision;
  }


  public void setSubdivision(ClassificationRef subdivision) {
    this.subdivision = subdivision;
  }


  public ClassifiedAddress geoLocation(GeoLocation geoLocation) {
    
    this.geoLocation = geoLocation;
    return this;
  }

   /**
   * Get geoLocation
   * @return geoLocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GeoLocation getGeoLocation() {
    return geoLocation;
  }


  public void setGeoLocation(GeoLocation geoLocation) {
    this.geoLocation = geoLocation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClassifiedAddress classifiedAddress = (ClassifiedAddress) o;
    return Objects.equals(this.pureId, classifiedAddress.pureId) &&
        Objects.equals(this.addressType, classifiedAddress.addressType) &&
        Objects.equals(this.addressLines, classifiedAddress.addressLines) &&
        Objects.equals(this.street, classifiedAddress.street) &&
        Objects.equals(this.building, classifiedAddress.building) &&
        Objects.equals(this.postalcode, classifiedAddress.postalcode) &&
        Objects.equals(this.city, classifiedAddress.city) &&
        Objects.equals(this.country, classifiedAddress.country) &&
        Objects.equals(this.subdivision, classifiedAddress.subdivision) &&
        Objects.equals(this.geoLocation, classifiedAddress.geoLocation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pureId, addressType, addressLines, street, building, postalcode, city, country, subdivision, geoLocation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClassifiedAddress {\n");
    sb.append("    pureId: ").append(toIndentedString(pureId)).append("\n");
    sb.append("    addressType: ").append(toIndentedString(addressType)).append("\n");
    sb.append("    addressLines: ").append(toIndentedString(addressLines)).append("\n");
    sb.append("    street: ").append(toIndentedString(street)).append("\n");
    sb.append("    building: ").append(toIndentedString(building)).append("\n");
    sb.append("    postalcode: ").append(toIndentedString(postalcode)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    subdivision: ").append(toIndentedString(subdivision)).append("\n");
    sb.append("    geoLocation: ").append(toIndentedString(geoLocation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

