/*
 * Pure API
 * This is an early access version of the new Pure write API.
 *
 * The version of the OpenAPI document: 0.1 Early Access
 * Contact: b.plauborg@elsevier.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elsevier.pure.api.sample.stubs.model;

import java.util.Objects;
import java.util.Arrays;
import com.elsevier.pure.api.sample.stubs.model.ClassificationRef;
import com.elsevier.pure.api.sample.stubs.model.ClassifiedAddress;
import com.elsevier.pure.api.sample.stubs.model.ClassifiedLocalizedValue;
import com.elsevier.pure.api.sample.stubs.model.ClassifiedValue;
import com.elsevier.pure.api.sample.stubs.model.DateRange;
import com.elsevier.pure.api.sample.stubs.model.KeywordGroup;
import com.elsevier.pure.api.sample.stubs.model.OrganizationRef;
import com.elsevier.pure.api.sample.stubs.model.PersonSupervisorAssociation;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * PersonOrganizationAssociation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-28T22:49:29.739+02:00[Europe/Copenhagen]")

public class PersonOrganizationAssociation {
  public static final String SERIALIZED_NAME_PURE_ID = "pureId";
  @SerializedName(SERIALIZED_NAME_PURE_ID)
  private Long pureId;

  public static final String SERIALIZED_NAME_ADDRESSES = "addresses";
  @SerializedName(SERIALIZED_NAME_ADDRESSES)
  private List<ClassifiedAddress> addresses = null;

  public static final String SERIALIZED_NAME_AFFILIATION_ID = "affiliationId";
  @SerializedName(SERIALIZED_NAME_AFFILIATION_ID)
  private String affiliationId;

  public static final String SERIALIZED_NAME_EMPLOYMENT_TYPE = "employmentType";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_TYPE)
  private ClassificationRef employmentType;

  public static final String SERIALIZED_NAME_ORGANIZATION = "organization";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION)
  private OrganizationRef organization;

  public static final String SERIALIZED_NAME_EMAILS = "emails";
  @SerializedName(SERIALIZED_NAME_EMAILS)
  private List<ClassifiedValue> emails = null;

  public static final String SERIALIZED_NAME_WEB_ADDRESSES = "webAddresses";
  @SerializedName(SERIALIZED_NAME_WEB_ADDRESSES)
  private List<ClassifiedLocalizedValue> webAddresses = null;

  public static final String SERIALIZED_NAME_PHONE_NUMBERS = "phoneNumbers";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBERS)
  private List<ClassifiedValue> phoneNumbers = null;

  public static final String SERIALIZED_NAME_PERIOD = "period";
  @SerializedName(SERIALIZED_NAME_PERIOD)
  private DateRange period;

  public static final String SERIALIZED_NAME_SUPERVISOR_ASSOCIATIONS = "supervisorAssociations";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_ASSOCIATIONS)
  private List<PersonSupervisorAssociation> supervisorAssociations = null;

  public static final String SERIALIZED_NAME_KEYWORD_GROUPS = "keywordGroups";
  @SerializedName(SERIALIZED_NAME_KEYWORD_GROUPS)
  private List<KeywordGroup> keywordGroups = null;

  public static final String SERIALIZED_NAME_PRIMARY_ASSOCIATION = "primaryAssociation";
  @SerializedName(SERIALIZED_NAME_PRIMARY_ASSOCIATION)
  private Boolean primaryAssociation;

  public static final String SERIALIZED_NAME_TYPE_DISCRIMINATOR = "typeDiscriminator";
  @SerializedName(SERIALIZED_NAME_TYPE_DISCRIMINATOR)
  private String typeDiscriminator;

  public PersonOrganizationAssociation() {
    this.typeDiscriminator = this.getClass().getSimpleName();
  }

   /**
   * Pure database ID of the object, prefer using the UUID if it is present on the entity
   * @return pureId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pure database ID of the object, prefer using the UUID if it is present on the entity")

  public Long getPureId() {
    return pureId;
  }




  public PersonOrganizationAssociation addresses(List<ClassifiedAddress> addresses) {
    
    this.addresses = addresses;
    return this;
  }

  public PersonOrganizationAssociation addAddressesItem(ClassifiedAddress addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<ClassifiedAddress>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * List of physical addresses.
   * @return addresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of physical addresses.")

  public List<ClassifiedAddress> getAddresses() {
    return addresses;
  }


  public void setAddresses(List<ClassifiedAddress> addresses) {
    this.addresses = addresses;
  }


  public PersonOrganizationAssociation affiliationId(String affiliationId) {
    
    this.affiliationId = affiliationId;
    return this;
  }

   /**
   * Affiliation identification. This could be a student ID or a staff ID.
   * @return affiliationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Affiliation identification. This could be a student ID or a staff ID.")

  public String getAffiliationId() {
    return affiliationId;
  }


  public void setAffiliationId(String affiliationId) {
    this.affiliationId = affiliationId;
  }


  public PersonOrganizationAssociation employmentType(ClassificationRef employmentType) {
    
    this.employmentType = employmentType;
    return this;
  }

   /**
   * Get employmentType
   * @return employmentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ClassificationRef getEmploymentType() {
    return employmentType;
  }


  public void setEmploymentType(ClassificationRef employmentType) {
    this.employmentType = employmentType;
  }


  public PersonOrganizationAssociation organization(OrganizationRef organization) {
    
    this.organization = organization;
    return this;
  }

   /**
   * Get organization
   * @return organization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OrganizationRef getOrganization() {
    return organization;
  }


  public void setOrganization(OrganizationRef organization) {
    this.organization = organization;
  }


  public PersonOrganizationAssociation emails(List<ClassifiedValue> emails) {
    
    this.emails = emails;
    return this;
  }

  public PersonOrganizationAssociation addEmailsItem(ClassifiedValue emailsItem) {
    if (this.emails == null) {
      this.emails = new ArrayList<ClassifiedValue>();
    }
    this.emails.add(emailsItem);
    return this;
  }

   /**
   * List of emails.
   * @return emails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of emails.")

  public List<ClassifiedValue> getEmails() {
    return emails;
  }


  public void setEmails(List<ClassifiedValue> emails) {
    this.emails = emails;
  }


  public PersonOrganizationAssociation webAddresses(List<ClassifiedLocalizedValue> webAddresses) {
    
    this.webAddresses = webAddresses;
    return this;
  }

  public PersonOrganizationAssociation addWebAddressesItem(ClassifiedLocalizedValue webAddressesItem) {
    if (this.webAddresses == null) {
      this.webAddresses = new ArrayList<ClassifiedLocalizedValue>();
    }
    this.webAddresses.add(webAddressesItem);
    return this;
  }

   /**
   * List of web addresses.
   * @return webAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of web addresses.")

  public List<ClassifiedLocalizedValue> getWebAddresses() {
    return webAddresses;
  }


  public void setWebAddresses(List<ClassifiedLocalizedValue> webAddresses) {
    this.webAddresses = webAddresses;
  }


  public PersonOrganizationAssociation phoneNumbers(List<ClassifiedValue> phoneNumbers) {
    
    this.phoneNumbers = phoneNumbers;
    return this;
  }

  public PersonOrganizationAssociation addPhoneNumbersItem(ClassifiedValue phoneNumbersItem) {
    if (this.phoneNumbers == null) {
      this.phoneNumbers = new ArrayList<ClassifiedValue>();
    }
    this.phoneNumbers.add(phoneNumbersItem);
    return this;
  }

   /**
   * Get phoneNumbers
   * @return phoneNumbers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ClassifiedValue> getPhoneNumbers() {
    return phoneNumbers;
  }


  public void setPhoneNumbers(List<ClassifiedValue> phoneNumbers) {
    this.phoneNumbers = phoneNumbers;
  }


  public PersonOrganizationAssociation period(DateRange period) {
    
    this.period = period;
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DateRange getPeriod() {
    return period;
  }


  public void setPeriod(DateRange period) {
    this.period = period;
  }


  public PersonOrganizationAssociation supervisorAssociations(List<PersonSupervisorAssociation> supervisorAssociations) {
    
    this.supervisorAssociations = supervisorAssociations;
    return this;
  }

  public PersonOrganizationAssociation addSupervisorAssociationsItem(PersonSupervisorAssociation supervisorAssociationsItem) {
    if (this.supervisorAssociations == null) {
      this.supervisorAssociations = new ArrayList<PersonSupervisorAssociation>();
    }
    this.supervisorAssociations.add(supervisorAssociationsItem);
    return this;
  }

   /**
   * List of associations to persons who supervise this person.
   * @return supervisorAssociations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of associations to persons who supervise this person.")

  public List<PersonSupervisorAssociation> getSupervisorAssociations() {
    return supervisorAssociations;
  }


  public void setSupervisorAssociations(List<PersonSupervisorAssociation> supervisorAssociations) {
    this.supervisorAssociations = supervisorAssociations;
  }


  public PersonOrganizationAssociation keywordGroups(List<KeywordGroup> keywordGroups) {
    
    this.keywordGroups = keywordGroups;
    return this;
  }

  public PersonOrganizationAssociation addKeywordGroupsItem(KeywordGroup keywordGroupsItem) {
    if (this.keywordGroups == null) {
      this.keywordGroups = new ArrayList<KeywordGroup>();
    }
    this.keywordGroups.add(keywordGroupsItem);
    return this;
  }

   /**
   * List of keyword groups.
   * @return keywordGroups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of keyword groups.")

  public List<KeywordGroup> getKeywordGroups() {
    return keywordGroups;
  }


  public void setKeywordGroups(List<KeywordGroup> keywordGroups) {
    this.keywordGroups = keywordGroups;
  }


  public PersonOrganizationAssociation primaryAssociation(Boolean primaryAssociation) {
    
    this.primaryAssociation = primaryAssociation;
    return this;
  }

   /**
   * A boolean value indicating whether this is the primary association or not. Only one of the associations from a person to an organisation will be primary.
   * @return primaryAssociation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A boolean value indicating whether this is the primary association or not. Only one of the associations from a person to an organisation will be primary.")

  public Boolean getPrimaryAssociation() {
    return primaryAssociation;
  }


  public void setPrimaryAssociation(Boolean primaryAssociation) {
    this.primaryAssociation = primaryAssociation;
  }


  public PersonOrganizationAssociation typeDiscriminator(String typeDiscriminator) {
    
    this.typeDiscriminator = typeDiscriminator;
    return this;
  }

   /**
   * Get typeDiscriminator
   * @return typeDiscriminator
  **/
  @ApiModelProperty(required = true, value = "")

  public String getTypeDiscriminator() {
    return typeDiscriminator;
  }


  public void setTypeDiscriminator(String typeDiscriminator) {
    this.typeDiscriminator = typeDiscriminator;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersonOrganizationAssociation personOrganizationAssociation = (PersonOrganizationAssociation) o;
    return Objects.equals(this.pureId, personOrganizationAssociation.pureId) &&
        Objects.equals(this.addresses, personOrganizationAssociation.addresses) &&
        Objects.equals(this.affiliationId, personOrganizationAssociation.affiliationId) &&
        Objects.equals(this.employmentType, personOrganizationAssociation.employmentType) &&
        Objects.equals(this.organization, personOrganizationAssociation.organization) &&
        Objects.equals(this.emails, personOrganizationAssociation.emails) &&
        Objects.equals(this.webAddresses, personOrganizationAssociation.webAddresses) &&
        Objects.equals(this.phoneNumbers, personOrganizationAssociation.phoneNumbers) &&
        Objects.equals(this.period, personOrganizationAssociation.period) &&
        Objects.equals(this.supervisorAssociations, personOrganizationAssociation.supervisorAssociations) &&
        Objects.equals(this.keywordGroups, personOrganizationAssociation.keywordGroups) &&
        Objects.equals(this.primaryAssociation, personOrganizationAssociation.primaryAssociation) &&
        Objects.equals(this.typeDiscriminator, personOrganizationAssociation.typeDiscriminator);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pureId, addresses, affiliationId, employmentType, organization, emails, webAddresses, phoneNumbers, period, supervisorAssociations, keywordGroups, primaryAssociation, typeDiscriminator);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersonOrganizationAssociation {\n");
    sb.append("    pureId: ").append(toIndentedString(pureId)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    affiliationId: ").append(toIndentedString(affiliationId)).append("\n");
    sb.append("    employmentType: ").append(toIndentedString(employmentType)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("    webAddresses: ").append(toIndentedString(webAddresses)).append("\n");
    sb.append("    phoneNumbers: ").append(toIndentedString(phoneNumbers)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    supervisorAssociations: ").append(toIndentedString(supervisorAssociations)).append("\n");
    sb.append("    keywordGroups: ").append(toIndentedString(keywordGroups)).append("\n");
    sb.append("    primaryAssociation: ").append(toIndentedString(primaryAssociation)).append("\n");
    sb.append("    typeDiscriminator: ").append(toIndentedString(typeDiscriminator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

