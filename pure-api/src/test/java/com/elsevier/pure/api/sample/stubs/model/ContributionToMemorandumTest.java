/*
 * Pure API
 * This is an early access version of the new Pure write API.
 *
 * The version of the OpenAPI document: 0.1 Early Access
 * Contact: b.plauborg@elsevier.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elsevier.pure.api.sample.stubs.model;

import com.elsevier.pure.api.sample.stubs.model.AdditionalFileElectronicVersion;
import com.elsevier.pure.api.sample.stubs.model.ArticleProcessingCharge;
import com.elsevier.pure.api.sample.stubs.model.BookSeriesJournalAssociation;
import com.elsevier.pure.api.sample.stubs.model.ClassificationRef;
import com.elsevier.pure.api.sample.stubs.model.ClassifiedLocalizedValue;
import com.elsevier.pure.api.sample.stubs.model.ContributionToMemorandumAllOf;
import com.elsevier.pure.api.sample.stubs.model.ContributorAssociation;
import com.elsevier.pure.api.sample.stubs.model.ElectronicVersion;
import com.elsevier.pure.api.sample.stubs.model.ExternalOrganizationRef;
import com.elsevier.pure.api.sample.stubs.model.FormattedString;
import com.elsevier.pure.api.sample.stubs.model.Identifier;
import com.elsevier.pure.api.sample.stubs.model.KeywordGroup;
import com.elsevier.pure.api.sample.stubs.model.Link;
import com.elsevier.pure.api.sample.stubs.model.OrganizationRef;
import com.elsevier.pure.api.sample.stubs.model.PublicationSeries;
import com.elsevier.pure.api.sample.stubs.model.PublicationStatus;
import com.elsevier.pure.api.sample.stubs.model.ResearchOutput;
import com.elsevier.pure.api.sample.stubs.model.Visibility;
import com.elsevier.pure.api.sample.stubs.model.Workflow;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ContributionToMemorandum
 */
public class ContributionToMemorandumTest {
    private final ContributionToMemorandum model = new ContributionToMemorandum();

    /**
     * Model tests for ContributionToMemorandum
     */
    @Test
    public void testContributionToMemorandum() {
        // TODO: test ContributionToMemorandum
    }

    /**
     * Test the property 'pureId'
     */
    @Test
    public void pureIdTest() {
        // TODO: test pureId
    }

    /**
     * Test the property 'uuid'
     */
    @Test
    public void uuidTest() {
        // TODO: test uuid
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'createdDate'
     */
    @Test
    public void createdDateTest() {
        // TODO: test createdDate
    }

    /**
     * Test the property 'modifiedBy'
     */
    @Test
    public void modifiedByTest() {
        // TODO: test modifiedBy
    }

    /**
     * Test the property 'modifiedDate'
     */
    @Test
    public void modifiedDateTest() {
        // TODO: test modifiedDate
    }

    /**
     * Test the property 'portalUrl'
     */
    @Test
    public void portalUrlTest() {
        // TODO: test portalUrl
    }

    /**
     * Test the property 'prettyUrlIdentifiers'
     */
    @Test
    public void prettyUrlIdentifiersTest() {
        // TODO: test prettyUrlIdentifiers
    }

    /**
     * Test the property 'previousUuids'
     */
    @Test
    public void previousUuidsTest() {
        // TODO: test previousUuids
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'subTitle'
     */
    @Test
    public void subTitleTest() {
        // TODO: test subTitle
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'peerReview'
     */
    @Test
    public void peerReviewTest() {
        // TODO: test peerReview
    }

    /**
     * Test the property 'internationalPeerReview'
     */
    @Test
    public void internationalPeerReviewTest() {
        // TODO: test internationalPeerReview
    }

    /**
     * Test the property 'publicationStatuses'
     */
    @Test
    public void publicationStatusesTest() {
        // TODO: test publicationStatuses
    }

    /**
     * Test the property 'language'
     */
    @Test
    public void languageTest() {
        // TODO: test language
    }

    /**
     * Test the property 'translatedTitle'
     */
    @Test
    public void translatedTitleTest() {
        // TODO: test translatedTitle
    }

    /**
     * Test the property 'translatedSubTitle'
     */
    @Test
    public void translatedSubTitleTest() {
        // TODO: test translatedSubTitle
    }

    /**
     * Test the property 'contributors'
     */
    @Test
    public void contributorsTest() {
        // TODO: test contributors
    }

    /**
     * Test the property 'organizations'
     */
    @Test
    public void organizationsTest() {
        // TODO: test organizations
    }

    /**
     * Test the property 'externalOrganisations'
     */
    @Test
    public void externalOrganisationsTest() {
        // TODO: test externalOrganisations
    }

    /**
     * Test the property 'totalNumberOfContributors'
     */
    @Test
    public void totalNumberOfContributorsTest() {
        // TODO: test totalNumberOfContributors
    }

    /**
     * Test the property 'managingOrganization'
     */
    @Test
    public void managingOrganizationTest() {
        // TODO: test managingOrganization
    }

    /**
     * Test the property 'openAccessPermission'
     */
    @Test
    public void openAccessPermissionTest() {
        // TODO: test openAccessPermission
    }

    /**
     * Test the property 'openAccessEmbargoDate'
     */
    @Test
    public void openAccessEmbargoDateTest() {
        // TODO: test openAccessEmbargoDate
    }

    /**
     * Test the property 'submissionYear'
     */
    @Test
    public void submissionYearTest() {
        // TODO: test submissionYear
    }

    /**
     * Test the property 'mainResearchArea'
     */
    @Test
    public void mainResearchAreaTest() {
        // TODO: test mainResearchArea
    }

    /**
     * Test the property 'electronicVersions'
     */
    @Test
    public void electronicVersionsTest() {
        // TODO: test electronicVersions
    }

    /**
     * Test the property 'additionalFiles'
     */
    @Test
    public void additionalFilesTest() {
        // TODO: test additionalFiles
    }

    /**
     * Test the property 'links'
     */
    @Test
    public void linksTest() {
        // TODO: test links
    }

    /**
     * Test the property 'articleProcessingCharge'
     */
    @Test
    public void articleProcessingChargeTest() {
        // TODO: test articleProcessingCharge
    }

    /**
     * Test the property 'keywordGroups'
     */
    @Test
    public void keywordGroupsTest() {
        // TODO: test keywordGroups
    }

    /**
     * Test the property 'bibliographicalNote'
     */
    @Test
    public void bibliographicalNoteTest() {
        // TODO: test bibliographicalNote
    }

    /**
     * Test the property 'descriptions'
     */
    @Test
    public void descriptionsTest() {
        // TODO: test descriptions
    }

    /**
     * Test the property 'visibility'
     */
    @Test
    public void visibilityTest() {
        // TODO: test visibility
    }

    /**
     * Test the property 'workflow'
     */
    @Test
    public void workflowTest() {
        // TODO: test workflow
    }

    /**
     * Test the property 'identifiers'
     */
    @Test
    public void identifiersTest() {
        // TODO: test identifiers
    }

    /**
     * Test the property 'systemName'
     */
    @Test
    public void systemNameTest() {
        // TODO: test systemName
    }

    /**
     * Test the property '_abstract'
     */
    @Test
    public void _abstractTest() {
        // TODO: test _abstract
    }

    /**
     * Test the property 'typeDiscriminator'
     */
    @Test
    public void typeDiscriminatorTest() {
        // TODO: test typeDiscriminator
    }

    /**
     * Test the property 'applicant'
     */
    @Test
    public void applicantTest() {
        // TODO: test applicant
    }

    /**
     * Test the property 'projectNumber'
     */
    @Test
    public void projectNumberTest() {
        // TODO: test projectNumber
    }

    /**
     * Test the property 'journalNumber'
     */
    @Test
    public void journalNumberTest() {
        // TODO: test journalNumber
    }

    /**
     * Test the property 'dateFinished'
     */
    @Test
    public void dateFinishedTest() {
        // TODO: test dateFinished
    }

    /**
     * Test the property 'numberOfPages'
     */
    @Test
    public void numberOfPagesTest() {
        // TODO: test numberOfPages
    }

    /**
     * Test the property 'publicationSeries'
     */
    @Test
    public void publicationSeriesTest() {
        // TODO: test publicationSeries
    }

    /**
     * Test the property 'bookSeries'
     */
    @Test
    public void bookSeriesTest() {
        // TODO: test bookSeries
    }

}
