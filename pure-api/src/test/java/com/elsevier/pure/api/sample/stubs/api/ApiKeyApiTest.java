/*
 * Pure API
 * This is an early access version of the new Pure write API.
 *
 * The version of the OpenAPI document: 0.1 Early Access
 * Contact: b.plauborg@elsevier.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elsevier.pure.api.sample.stubs.api;

import com.elsevier.pure.api.sample.stubs.invoker.ApiException;
import com.elsevier.pure.api.sample.stubs.model.ApiKey;
import com.elsevier.pure.api.sample.stubs.model.ApiKeyListResult;
import com.elsevier.pure.api.sample.stubs.model.ProblemDetails;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApiKeyApi
 */
@Ignore
public class ApiKeyApiTest {

    private final ApiKeyApi api = new ApiKeyApi();

    
    /**
     * Create api key
     *
     * Create api key
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createTest() throws ApiException {
        ApiKey apiKey = null;
        ApiKey response = api.create(apiKey);

        // TODO: test validations
    }
    
    /**
     * Delete api key
     *
     * Delete api key with specific UUID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteTest() throws ApiException {
        UUID uuid = null;
        api.delete(uuid);

        // TODO: test validations
    }
    
    /**
     * Get api key
     *
     * Get api key with specific UUID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTest() throws ApiException {
        UUID uuid = null;
        ApiKey response = api.get(uuid);

        // TODO: test validations
    }
    
    /**
     * Lists all api keys
     *
     * Lists all api keys in the Pure instance.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listTest() throws ApiException {
        Integer size = null;
        Integer offset = null;
        String order = null;
        ApiKeyListResult response = api.list(size, offset, order);

        // TODO: test validations
    }
    
    /**
     * Update api key
     *
     * Update api key with specific UUID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateTest() throws ApiException {
        UUID uuid = null;
        ApiKey apiKey = null;
        ApiKey response = api.update(uuid, apiKey);

        // TODO: test validations
    }
    
}
