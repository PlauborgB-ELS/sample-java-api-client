/*
 * Pure API
 * This is an early access version of the new Pure write API.
 *
 * The version of the OpenAPI document: 0.1 Early Access
 * Contact: b.plauborg@elsevier.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elsevier.pure.api.sample.stubs.api;

import com.elsevier.pure.api.sample.stubs.invoker.ApiException;
import com.elsevier.pure.api.sample.stubs.model.ProblemDetails;
import java.util.UUID;
import com.elsevier.pure.api.sample.stubs.model.User;
import com.elsevier.pure.api.sample.stubs.model.UserListResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserApi
 */
@Ignore
public class UserApiTest {

    private final UserApi api = new UserApi();

    
    /**
     * Create user
     *
     * Create user
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createTest() throws ApiException {
        User user = null;
        User response = api.create(user);

        // TODO: test validations
    }
    
    /**
     * Delete user
     *
     * Delete user with specific UUID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteTest() throws ApiException {
        UUID uuid = null;
        api.delete(uuid);

        // TODO: test validations
    }
    
    /**
     * Get user
     *
     * Get user UUID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTest() throws ApiException {
        UUID uuid = null;
        User response = api.get(uuid);

        // TODO: test validations
    }
    
    /**
     * Lists all users
     *
     * Lists all users in the Pure instance. If you need to filter the users returned, see the POST version which supports additional filtering.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listTest() throws ApiException {
        Integer size = null;
        Integer offset = null;
        String order = null;
        UserListResult response = api.list(size, offset, order);

        // TODO: test validations
    }
    
    /**
     * Update user
     *
     * Update user with specific UUID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateTest() throws ApiException {
        UUID uuid = null;
        User user = null;
        User response = api.update(uuid, user);

        // TODO: test validations
    }
    
}
